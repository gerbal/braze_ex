openapi: 3.0.0
info:
  title: Braze Endpoints
  description: Braze HTTP API (generated from Braze Postman Collection)
  version: 1.0.5
servers:
  - url: https://{{instance_url}}
  - url: https://rest.iad-01.braze.com
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Catalogs
    description: |-
      Use the Braze Catalogs Endpoints to add, edit, and manage your catalogs and catalog item details. You can use the asynchronous catalog endpoints to make bulk changes to your catalog.

      Looking for guidance on creating a catalog? Check out our article for [creating and using catalogs](https://www.braze.com/docs/user_guide/personalization_and_dynamic_content/catalog/).
  - name: Catalogs > Catalog Management
  - name: Catalogs > Catalog Management > Synchronous
  - name: Catalogs > Catalog Items
  - name: Catalogs > Catalog Items > Asynchronous
  - name: Catalogs > Catalog Items > Synchronous
  - name: Email Lists & Addresses
    description: Users’ email subscription status can be updated and retrieved via Braze using a RESTful API. You can use the API to set up bi-directional sync between Braze and other email systems or your own database.
  - name: Export
    description: "With this collection of endpoints, you will be able to access and export various levels of details on your users, segments, campaigns, and Canvases. \n\nPlease be sure to reference the correct Instance when making API requests.\n\n"
  - name: Export > Campaign
  - name: Export > Canvas
  - name: Export > Custom Events
  - name: Export > KPI
  - name: Export > News Feed
  - name: Export > Purchases
  - name: Export > Segment
  - name: Export > Session Analytics
  - name: Export > Users
  - name: Messaging
    description: |+
      The Braze messaging API provides you with two distinct options for sending messages to your users. You can provide the message contents and configuration in the API request with the /messages/send and /messages/schedule endpoints. Alternatively, you can manage the details of your message with an API-Triggered Delivery campaign in the dashboard and just control when and to whom it is sent with the campaigns/trigger/send and campaigns/trigger/schedule endpoints. The following sections will detail the request specification for both methods.

      The examples below contain the URL https://rest.iad-01.braze.com, but some customers will need to use a different endpoint URL, for example if you are hosted in Braze’s EU data center or have a dedicated Braze installation. Your Success Manager will inform you if you should use a different endpoint URL.

      Similarly to other campaigns, you can limit the number of times a particular user can receive a Messaging API campaign by configuring re-eligibility settings in the Braze Dashboard. Braze will not deliver API messages to users that haven’t become re-eligible for the campaign regardless of how many API requests are sent.

  - name: Messaging > Schedule Mesages
  - name: Messaging > Send Messages
  - name: SCIM
  - name: SMS
    description: Use the Braze SMS Endpoints to manage your users’ phone numbers in your subscription groups.
  - name: Subscription Groups
    description: Use the Subscription Group REST APIs to programmatically manage the subscription groups that you have stored on the Braze dashboard, on the Subscription Group page.
  - name: Subscription Groups > Email
  - name: Subscription Groups > SMS
  - name: Templates
  - name: Templates > Content Blocks
    description: "Content Blocks are an Email Templating feature that allow you to: \n- Create a consistent look and feel to your Email campaigns using Content Blocks as Headers and Footers.\n- Distribute the same offer codes through different channels.\n- Create pre-defined assets that can be used to build messages with consistent information and assets.\n- Copy entire message bodies to other messages.\n\nYou can edit Content Blocks in the Templates & Media section of the Braze UI, or here, via API."
  - name: Templates > Email Templates
  - name: User Data
    description: |+
      The User API allows you to track information on your users by logging data about your users that comes from outside your mobile app. You can also use this API to delete users for testing or other purposes.

      All API endpoints have a data payload limit of 4MB. Attempts to post more data than 4MB will fail with an HTTP 413 Request Entity Too Large.

      The examples below contain the URL https://rest.iad-01.braze.com, but some customers will need to use a different endpoint URL, for example if you are hosted in Braze’s EU data center or have a dedicated Braze installation. Your Success Manager will inform you if you should use a different endpoint URL.

  - name: User Data > External ID Migration
    description: The External ID Migration API allows you to rename existing external IDs (creating a new primary ID and deprecating the existing ID) and remove deprecated IDs post-migration. <br><br> We've architected this solution to allow multiple External IDs in order to support a migration period whereby older versions of your apps still in the wild that use the previous External ID naming schema don’t break. We highly recommend removing deprecated External IDs once your old naming schema is no longer in use.
paths:
  /catalogs/{catalog_name}:
    delete:
      tags:
        - Catalogs > Catalog Management > Synchronous
      summary: Delete Catalog
      description: |-
        Use this endpoint to delete a catalog.

        ## Rate limit

        This endpoint has a shared rate limit of 5 requests per minute between all synchronous catalog endpoints.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |

        ## Response

        There are two status code responses for this endpoint: `200` and `404`.

        ### Example success response

        The status code `200` could return the following response body.

        ``` json
        {
          "message": "success"
        }

        ```

        ### Example error response

        The status code `404` could return the following response body. Refer to [Troubleshooting](https://www.braze.com/docs/api/endpoints/catalogs/catalog_management/synchronous/delete_catalog/#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "catalog-not-found",
              "message": "Could not find catalog",
              "parameters": [
                "catalog_name"
              ],
              "parameter_values": [
                "restaurants"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /catalogs:
    get:
      tags:
        - Catalogs > Catalog Management > Synchronous
      summary: List Catalogs in App Group
      description: "Use this endpoint to return a list of catalogs in an app group.  \n  \n## Path parameters\n\nThere are no path parameters for this endpoint.\n\n## Request parameters\n\nThere is no request body for this endpoint.\n\n## Response\n\n### Example success response\n\nThe status code `200` could return the following response body.\n\n``` json\n{\n  \"catalogs\": [\n    {\n      \"description\": \"My Restaurants\",\n      \"fields\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"City\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Cuisine\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Rating\",\n          \"type\": \"number\"\n        },\n        {\n          \"name\": \"Loyalty_Program\",\n          \"type\": \"boolean\"\n        },\n        {\n          \"name\": \"Created_At\",\n          \"type\": \"time\"\n        }\n      ],\n      \"name\": \"restaurants\",\n      \"num_items\": 10,\n      \"updated_at\": \"2022-11-02T20:04:06.879+00:00\"\n    },\n    {\n      \"description\": \"My Catalog\",\n      \"fields\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"string_field\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"number_field\",\n          \"type\": \"number\"\n        },\n        {\n          \"name\": \"boolean_field\",\n          \"type\": \"boolean\"\n        },\n        {\n          \"name\": \"time_field\",\n          \"type\": \"time\"\n        },\n      ],\n      \"name\": \"my_catalog\",\n      \"num_items\": 3,\n      \"updated_at\": \"2022-11-02T09:03:19.967+00:00\"\n    },\n  ],\n  \"message\": \"success\"\n}\n\n```"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Catalogs > Catalog Management > Synchronous
      summary: Create Catalog
      description: |-
        Use this endpoint to create a catalog.

        ## Rate limit

        This endpoint has a shared rate limit of 5 requests per minute between all synchronous catalog endpoints.

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalogs` | Required | Array | An array that contains catalog objects. Only one catalog object is allowed for this request. |

        ### Catalog object parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `name` | Required | String | The name of the catalog that you want to create. |
        | `description` | Required | String | The description of the catalog that you want to create. |
        | `fields` | Required | Array | An array of objects where the object contains keys `name` and `type`. |

        ## Example Request

        ```
        curl --location --request POST 'https://rest.iad-03.braze.com/catalogs' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY' \
        --data-raw '{
          "catalogs": [
            {
              "name": "restaurants",
              "description": "My Restaurants",
              "fields": [
                {
                  "name": "id",
                  "type": "string"
                },
                {
                  "name": "Name",
                  "type": "string"
                },
                {
                  "name": "City",
                  "type": "string"
                },
                {
                  "name": "Cuisine",
                  "type": "string"
                },
                {
                  "name": "Rating",
                  "type": "number"
                },
                {
                  "name": "Loyalty_Program",
                  "type": "boolean"
                },
                {
                  "name": "Created_At",
                  "type": "time"
                }
              ]
            }
          ]
        }'

        ```

        ## Response

        There are two status code responses for this endpoint: `201` and `400`.

        ### Example success response

        The status code `201` could return the following response body.

        ``` json
        {
          "catalogs": [
            {
              "description": "My Restaurants",
              "fields": [
                {
                  "name": "id",
                  "type": "string"
                },
                {
                  "name": "Name",
                  "type": "string"
                },
                {
                  "name": "City",
                  "type": "string"
                },
                {
                  "name": "Cuisine",
                  "type": "string"
                },
                {
                  "name": "Rating",
                  "type": "number"
                },
                {
                  "name": "Loyalty_Program",
                  "type": "boolean"
                },
                {
                  "name": "Created_At",
                  "type": "time"
                }
              ],
              "name": "restaurants",
              "num_items": 0,
              "updated_at": "2022-11-02T20:04:06.879+00:00"
            }
          ],
          "message": "success"
        }

        ```

        ### Example error response

        The status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "catalog-name-already-exists",
              "message": "A catalog with that name already exists",
              "parameters": [
                "name"
              ],
              "parameter_values": [
                "restaurants"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-array-invalid` | `catalogs` must be an array of objects. |
        | `too-many-catalog-atoms` | You can only create one catalog per request. |
        | `invalid_catalog_name` | Catalog name can only include letters, numbers, hyphens, and underscores. |
        | `catalog-name-too-large` | Character limit for a catalog name is 250. |
        | `catalog-name-already-exists` | Catalog with that name already exists. |
        | `id-not-first-column` | The `id` must be the first field in the array. Check that the type is a string. |
        | `invalid-fields` | `fields` is not formatted correctly. |
        | `too-many-fields` | Number of fields limit is 30. |
        | `invalid-field-names` | Fields can only include letters, numbers, hyphens, and underscores. |
        | `invalid-field-types` | Make sure the field types are valid. |
        | `field-names-too-large` | Character limit for a field name is 250. |
        | `field-names-not-unique` | The same field name is referenced twice. |
        | `reached-company-catalogs-limit` | Maximum number of catalogs reached. Contact your Braze account manager for more information. |
        | `description-too-long` | Character limit for description is 250. |
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /catalogs/{catalog_name}/items:
    delete:
      tags:
        - Catalogs > Catalog Items > Asynchronous
      summary: Delete Multiple Catalog Items
      description: |-
        Use this endpoint to delete multiple items in your catalog. Each request can support up to 50 items. This endpoint is asynchronous.

        ## Rate limit

        This endpoint has a shared rate limit of 100 requests per minute between all asynchronous catalog item endpoints.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `items` | Required | Array | An array that contains item objects. The item objects should contain an `id` referencing the items Braze should delete. Up to 50 item objects are allowed per request. |

        ## Example request

        ```
        curl --location --request DELETE 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY' \
        --data-raw '{
          "items": [
            {"id": "restaurant1"},
            {"id": "restaurant2"},
            {"id": "restaurant3"}
          ]
        }'

        ```

        ## Response

        There are three status code responses for this endpoint: `202`, `400`, and `404`.

        ### Example success response

        The status code `202` could return the following response body.

        ``` json
        {
          "message": "success"
        }

        ```

        ### Example error response

        The status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "items-missing-ids",
              "message": "There are 1 item(s) that do not have ids",
              "parameters": [],
              "parameter_values": []
            }
          ],
          "message": "Invalid Request",
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
        | `request-includes-too-many-items` | Your request has too many items. The item limit per request is 50. |
        | `invalid-ids` | Item IDs can only include letters, numbers, hyphens, and underscores. |
        | `ids-too-large` | Item IDs can't be more than 250 characters. |
        | `ids-not-unique` | Check that the item IDs are unique in the request. |
        | `ids-not-strings` | Item IDs must be of type string. |
        | `items-missing-ids` | There are items that do not have item IDs. Check that each item has an item ID. |
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Catalogs > Catalog Items > Asynchronous
      summary: Edit Multiple Catalog Items
      description: |-
        Use this endpoint to edit multiple items in your catalog. Each request can support up to 50 items. This endpoint is asynchronous.

        ## Rate limit

        This endpoint has a shared rate limit of 100 requests per minute between all asynchronous catalog item endpoints.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `items` | Required | Array | An array that contains item objects. The item objects should contain fields that exist in the catalog. Up to 50 item objects are allowed per request. |

        ## Example request

        ```
        curl --location --request PATCH 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY' \
        --data-raw '{
          "items": [
            {
              "id": "restaurant1",
              "Name": "Restaurant",
              "Loyalty_Program": false,
              "Open_Time": "2021-09-03T09:03:19.967+00:00"
            },
            {
              "id": "restaurant3",
              "City": "San Francisco",
              "Rating": 2
            }
          ]
        }'

        ```

        ## Response

        There are three status code responses for this endpoint: `202`, `400`, and `404`.

        ### Example success response

        The status code `202` could return the following response body.

        ``` json
        {
          "message": "success"
        }

        ```

        ### Example error response

        The status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "invalid-fields",
              "message": "Some of the fields given do not exist in the catalog",
              "parameters": [
                "id"
              ],
              "parameter_values": [
                "restaurant1"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
        | `item-array-invalid` | `items` must be an array of objects. |
        | `request-includes-too-many-items` | Your request has too many items. The item limit per request is 50. |
        | `invalid-ids` | Item IDs can only include letters, numbers, hyphens, and underscores. |
        | `ids-too-large` | Item IDs can't be more than 250 characters. |
        | `ids-not-unique` | Item IDs must be unique in the request. |
        | `ids-not-strings` | Item IDs must be of type string. |
        | `items-missing-ids` | There are items that do not have item IDs. Check that each item has an item ID. |
        | `items-too-large` | Item values can't exceed 5,000 characters. |
        | `invalid-fields` | Confirm that the fields in the request exist in the catalog. |
        | `unable-to-coerce-value` | Item types can't be converted. |
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Catalogs > Catalog Items > Asynchronous
      summary: Create Multiple Catalog Items
      description: |-
        Use this endpoint to create multiple items in your catalog. Each request can support up to 50 items. This endpoint is asynchronous.

        ## Rate limit

        This endpoint has a shared rate limit of 100 requests per minute between all asynchronous catalog item endpoints.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `items` | Required | Array | An array that contains item objects. The item objects should contain all of the fields in the catalog. Up to 50 item objects are allowed per request. |

        ## Example Request

        ```
        curl --location --request POST 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY' \
        --data-raw '{
          "items": [
            {
              "id": "restaurant1",
              "Name": "Restaurant1",
              "City": "New York",
              "Cuisine": "American",
              "Rating": 5,
              "Loyalty_Program": true,
              "Created_At": "2022-11-01T09:03:19.967+00:00"
            },
            {
              "id": "restaurant2",
              "Name": "Restaurant2",
              "City": "New York",
              "Cuisine": "American",
              "Rating": 10,
              "Loyalty_Program": true,
              "Created_At": "2022-11-02T09:03:19.967+00:00"
            },
            {
              "id": "restaurant3",
              "Name": "Restaurant3",
              "City": "New York",
              "Cuisine": "American",
              "Rating": 3,
              "Loyalty_Program": false,
              "Created_At": "2022-11-03T09:03:19.967+00:00"
            }
          ]
        }'

        ```

        ## Response

        There are three status code responses for this endpoint: `202`, `400`, and `404`.

        ### Example success response

        The status code `202` could return the following response body.

        ``` json
        {
          "message": "success"
        }

        ```

        ### Example error response

        The status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "fields-do-not-match",
              "message": "Fields do not match with fields on the catalog",
              "parameters": [
                "id"
              ],
              "parameter_values": [
                "restaurant2"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
        | `item-array-invalid` | `items` must be an array of objects. |
        | `request-includes-too-many-items` | Your request has too many items. The item limit per request is 50. |
        | `invalid-ids` | Item IDs can only include letters, numbers, hyphens, and underscores. |
        | `ids-too-large` | Item IDs can't be more than 250 characters. |
        | `ids-not-unique` | Item IDs must be unique in the request. |
        | `ids-not-strings` | Item IDs must be of type string. |
        | `items-missing-ids` | There are items that do not have item IDs. Check that each item has an item ID. |
        | `items-too-large` | Item values can't exceed 5,000 characters. |
        | `invalid-fields` | Confirm that the fields in the request exist in the catalog. |
        | `fields-do-not-match` | Updated fields must match the fields in the catalog. |
        | `unable-to-coerce-value` | Item types can't be converted. |
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Catalogs > Catalog Items > Synchronous
      summary: List Multiple Catalog Item Details
      description: "Use this endpoint to return multiple catalog items and their content.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints.\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n\n## Query parameters\n\nNote that each call to this endpoint will return 50 items. For a catalog with more than 50 items, use the `Link` header to retrieve the data on the next page as shown in the following example response.\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `cursor` | Optional | String | Determines the pagination of the catalog items. |\n\n## Request parameters\n\nThere is no request body for this endpoint.\n\n## Example requests\n\n### Without cursor\n\n```\ncurl --location --request GET 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n### With cursor\n\n```\ncurl --location --request GET 'https://rest.iad-03.braze.com/catalogs/restaurants/items?cursor=c2tpcDow' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `200`, `400`, and `404`.\n\n### Example success response\n\nThe status code `200` could return the following response header and body.\n\n{% alert note %}  \nThe `Link` header won't exist if the catalog has less than or equal to 50 items. For calls without a cursor, `prev` will not show. When looking at the last page of items, `next` will not show.  \n{% endalert %}\n\n```\nLink: ; rel=\"prev\",; rel=\"next\"\n\n```\n\n``` json\n{\n  \"items\": [\n    {\n      \"id\": \"restaurant1\",\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Open_Time\": \"2022-11-02T09:03:19.967Z\"\n    },\n    {\n      \"id\": \"restaurant2\",\n      \"Name\": \"Restaurant2\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 10,\n      \"Loyalty_Program\": true,\n      \"Open_Time\": \"2022-11-02T09:03:19.967Z\"\n    },\n    {\n      \"id\": \"restaurant3\",\n      \"Name\": \"Restaurant3\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": false,\n      \"Open_Time\": \"2022-11-02T09:03:19.967Z\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"invalid-cursor\",\n      \"message\": \"'cursor' is not valid\",\n      \"parameters\": [\n        \"cursor\"\n      ],\n      \"parameter_values\": [\n        \"bad-cursor\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `invalid-cursor` | Check that your `cursor` is valid. |\n| `catalog-not-found` | Check that the catalog name is valid. |"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /catalogs/{catalog_name}/items/{item_id}:
    delete:
      tags:
        - Catalogs > Catalog Items > Synchronous
      summary: Delete a Catalog Item
      description: |-
        Use this endpoint to delete an item in your catalog.

        ## Rate limit

        This endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints.

        ## Request parameters

        There is no request body for this endpoint.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |
        | `item_id` | Required | String | The ID of the catalog item. |

        ## Example request

        ```
        curl --location --request DELETE 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY'

        ```

        ## Response

        There are three status code responses for this endpoint: `202`, `400`, and `404`.

        ### Example success response

        The status code `202` could return the following response body.

        ``` json
        {
          "message": "success"
        }

        ```

        ### Example error response

        The status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "item-not-found",
              "message": "Could not find item",
              "parameters": [
                "item_id"
              ],
              "parameter_values": [
                "restaurant34"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
        | `item-not-found` | Check that the item to be deleted exists in your catalog. |
        | `arbitrary-error` | An arbitrary error occurred. Please try again or contact [Support]({{site.baseurl}}/support_contact/). |
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
        - name: item_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Catalogs > Catalog Items > Synchronous
      summary: List Catalog Item Details
      description: |-
        Use this endpoint to return a catalog item and its content.

        ## Rate limit

        This endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |
        | `item_id` | Required | String | The ID of the catalog item. |

        ## Request parameters

        There is no request body for this endpoint.

        ## Example request

        ```
        curl --location --request GET 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY'

        ```

        ## Response

        There are two status code responses for this endpoint: `200` and `404`.

        ### Example success response

        The status code `200` could return the following response body.

        ``` json
        {
          "items": [
            {
              "id": "restaurant3",
              "Name": "Restaurant1",
              "City": "New York",
              "Cuisine": "American",
              "Rating": 5,
              "Loyalty_Program": true,
              "Open_Time": "2022-11-01T09:03:19.967Z"
            }
          ],
          "message": "success"
        }

        ```

        ### Example error response

        The status code `404` could return the following response. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "item-not-found",
              "message": "Could not find item",
              "parameters": [
                "item_id"
              ],
              "parameter_values": [
                "restaurant34"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps, if applicable.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
        | `item-not-found` | Check that the item is in the catalog. |
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
        - name: item_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Catalogs > Catalog Items > Synchronous
      summary: Edit Catalog Items
      description: |-
        Use this endpoint to edit an item in your catalog.

        ## Rate Limit

        This endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |
        | `item_id` | Required | String | The ID of the catalog item. |

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `items` | Required | Array | An array that contains item objects. The item objects should contain fields that exist in the catalog except for the `id` field. Only one item object is allowed per request. |

        ## Example request

        ```
        curl --location --request PATCH 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY' \
        --data-raw '{
          "items": [
            {
              "Name": "Restaurant",
              "Loyalty_Program": false,
              "Open_Time": "2021-09-03T09:03:19.967+00:00"
            }
          ]
        }'

        ```

        ## Response

        There are three status code responses for this endpoint: `200`, `400`, and `404`.

        ### Example success response

        The status code `200` could return the following response body.

        ``` json
        {
          "message": "success"
        }

        ```

        ### Example error response

        The status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "invalid-fields",
              "message": "Some of the fields given do not exist in the catalog",
              "parameters": [
                "id"
              ],
              "parameter_values": [
                "restaurant1"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
        | `item-not-found` | Check that the item is in the catalog. |
        | `item-array-invalid` | `items` must be an array of objects. |
        | `request-includes-too-many-items` | You can only edit one catalog item per request. |
        | `id-in-body` | An item ID already exists in the catalog. |
        | `invalid-ids` | Supported characters for item ID names are letters, numbers, hyphens, and underscores. |
        | `ids-too-large` | Character limit for each item ID is 250 characters. |
        | `items-too-large` | Character limit for each item is 5,000 characters. |
        | `invalid-fields` | Confirm that the fields in the request exist in the catalog. |
        | `unable-to-coerce-value` | Item types can't be converted. |
        | `filtered-set-field-too-long` | The field value is being used in a filtered set that exceeds the character limit for an item. |
        | `arbitrary-error` | An arbitrary error occurred. Please try again or contact [Support]({{site.baseurl}}/support_contact/). |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant\",\n      \"Loyalty_Program\": false,\n      \"Open_Time\": \"2021-09-03T09:03:19.967+00:00\"\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
        - name: item_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Catalogs > Catalog Items > Synchronous
      summary: Create Catalog Item
      description: |-
        Use this endpoint to create an item in your catalog.

        ## Rate limit

        This endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints.

        ## Path parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `catalog_name` | Required | String | Name of the catalog. |
        | `item_id` | Required | String | The ID of the catalog item. |

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `items` | Required | Array | An array that contains item objects. The item objects should contain all of the fields in the catalog except for the `id` field. Only one item object is allowed per request. |

        ## Example Request

        ```
        curl --location --request POST 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer YOUR-REST-API-KEY' \
        --data-raw '{
          "items": [
            {
              "Name": "Restaurant1",
              "City": "New York",
              "Cuisine": "American",
              "Rating": 5,
              "Loyalty_Program": true,
              "Created_At": "2022-11-01T09:03:19.967+00:00"
            }
          ]
        }'

        ```

        ## Response

        There are three status code responses for this endpoint: `201`, `400`, and `404`.

        ### Example success response

        The status code `201` could return the following response body.

        ``` json
        {
          "message": "success"
        }

        ```

        ### Example error response

        The status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.

        ``` json
        {
          "errors": [
            {
              "id": "fields-do-not-match",
              "message": "Fields do not match with fields on the catalog",
              "parameters": [
                "id"
              ],
              "parameter_values": [
                "restaurant2"
              ]
            }
          ],
          "message": "Invalid Request"
        }

        ```

        ## Troubleshooting

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | `catalog-not-found` | Check that the catalog name is valid. |
        | `item-array-invalid` | `items` must be an array of objects. |
        | `request-includes-too-many-items` | You can only create one catalog item per request. |
        | `id-in-body` | Remove any item IDs in the request body. |
        | `invalid-ids` | Supported characters for item ID names are letters, numbers, hyphens, and underscores. |
        | `ids-too-large` | Character limit for each item ID is 250 characters. |
        | `items-too-large` | Character limit for each item is 5,000 characters. |
        | `item-already-exists` | The item already exists in the catalog. |
        | `invalid-fields` | Confirm that the fields in the request exist in the catalog. |
        | `fields-do-not-match` | Fields must match the fields in the catalog. |
        | `filtered-set-field-too-long` | The field value is being used in a filtered set that exceeds the character limit for an item. |
        | `already-reached-catalog-item-limit` | Maximum number of catalogs reached. Contact your Braze account manager for more information. |
        | `already-reached-company-item-limit` | Maximum number of catalog items reached. Contact your Braze account manager for more information. |
        | `unable-to-coerce-value` | Item types can't be converted. |
        | `arbitrary-error` | An arbitrary error occurred. Please try again or contact [Support]({{site.baseurl}}/support_contact/). |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Created_At\": \"2022-11-01T09:03:19.967+00:00\"\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: catalog_name
          in: path
          schema:
            type: string
          required: true
        - name: item_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /email/hard_bounces:
    get:
      tags:
        - Email Lists & Addresses
      summary: Query Hard Bounced Emails
      description: |-
        Use this endpoint to pull a list of email addresses that have “hard bounced” your email messages within a certain time frame.

        > **Note:** You must provide an `end_date`, as well as either an `email` or a `start_date`. If you provide all three, `start_date`, `end_date`, and an `email`, we prioritize the emails given and disregard the date range.

        If your date range has more than `limit` number of hard bounces, you will need to make multiple API calls, each time increasing the `offset` until a call returns either fewer than `limit` or zero results.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        Entries are listed in descending order.

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "emails": [
            {
              "email": "example1@braze.com",
              "hard_bounced_at": "2016-08-25 15:24:32 +0000"
            },
            {
              "email": "example2@braze.com",
              "hard_bounced_at": "2016-08-24 17:41:58 +0000"
            },
            {
              "email": "example3@braze.com",
              "hard_bounced_at": "2016-08-24 12:01:13 +0000"
            }
          ],
          "message": "success"
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: start_date
          in: query
          schema:
            type: string
          description: "(Optional*) String in YYYY-MM-DD format \n\nStart date of the range to retrieve hard bounces, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.\n\n*You must provide either an `email` or a `start_date`, and an `end_date`.\n"
          example: "2019-01-01"
        - name: end_date
          in: query
          schema:
            type: string
          description: |-
            (Optional*) String in YYYY-MM-DD format

            String in YYYY-MM-DD format. End date of the range to retrieve hard bounces. This is treated as midnight in UTC time by the API.

            *You must provide either an `email` or a `start_date`, and an `end_date`.
          example: "2019-02-01"
        - name: limit
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            Optional field to limit the number of results returned. Defaults to 100, maximum is 500.
          example: "100"
        - name: offset
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            Optional beginning point in the list to retrieve from.
          example: "1"
        - name: email
          in: query
          schema:
            type: string
          description: |-
            (Optional*) String

            If provided, we will return whether or not the user has hard bounced.

            *You must provide either an `email` or a `start_date`, and an `end_date`.
          example: example@braze.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /email/unsubscribes:
    get:
      tags:
        - Email Lists & Addresses
      summary: Query List of Unsubscribed Email Addresses
      description: |-
        Use this endpoint to return emails that have unsubscribed during the time period from `start_date` to `end_date`. You can use this endpoint to set up a bi-directional sync between Braze and other email systems or your own database.

        > **Note:** You must provide an `end_date`, as well as either an `email` or a `start_date`.

        If your date range has more than `limit` number of unsubscribes, you will need to make multiple API calls, each time increasing the `offset` until a call returns either fewer than `limit` or zero results.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        Entries are listed in descending order.

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "emails": [
            {
              "email": "example1@braze.com",
              "unsubscribed_at": "2016-08-25 15:24:32 +0000"
            },
            {
              "email": "example2@braze.com",
              "unsubscribed_at": "2016-08-24 17:41:58 +0000"
            },
            {
              "email": "example3@braze.com",
              "unsubscribed_at": "2016-08-24 12:01:13 +0000"
            }
          ],
          "message": "success"
        }

        ```
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: start_date
          in: query
          schema:
            type: string
          description: |-
            (Optional*) String in YYYY-MM-DD format

            Start date of the range to retrieve unsubscribes, must be earlier than end_date. This is treated as midnight in UTC time by the API.
          example: "2020-01-01"
        - name: end_date
          in: query
          schema:
            type: string
          description: |-
            (Optional*)  String in YYYY-MM-DD format

            End date of the range to retrieve unsubscribes. This is treated as midnight in UTC time by the API.
          example: "2020-02-01"
        - name: limit
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            Optional field to limit the number of results returned. Limit must be greater than 1. Defaults to 100, maximum is 500.
          example: "1"
        - name: offset
          in: query
          schema:
            type: integer
          description: "(Optional) Integer \n\nOptional beginning point in the list to retrieve from."
          example: "1"
        - name: sort_direction
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            Pass in the value `asc` to sort unsubscribes from oldest to newest. Pass in `desc` to sort from newest to oldest. If sort_direction is not included, the default order is newest to oldest.
          example: desc
        - name: email
          in: query
          schema:
            type: string
          description: |-
            (Optional*) String

            If provided, we will return whether or not the user has unsubscribed.
          example: example@braze.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /email/status:
    post:
      tags:
        - Email Lists & Addresses
      summary: Change Email Subscription Status
      description: |-
        Use this endpoint to set the email subscription state for your users. Users can be `opted_in`, `unsubscribed`, or `subscribed` (not specifically opted in or out).

        You can set the email subscription state for an email address that is not yet associated with any of your users within Braze. When that email address is subsequently associated with a user, the email subscription state that you uploaded will be automatically set.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `email` | Required | String or array | String email address to modify, or an array of up to 50 email addresses to modify. |
        | `subscription_state` | Required | String | Either “subscribed”, “unsubscribed”, or “opted_in”. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email\": \"example@braze.com\",\n  \"subscription_state\": \"subscribed\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /email/bounce/remove:
    post:
      tags:
        - Email Lists & Addresses
      summary: Remove Hard Bounced Emails
      description: |-
        Use this endpoint to remove email addresses from your Braze bounce list. We will also remove them from the bounce list maintained by your email provider.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `email` | Required | String or array | String email address to modify, or an array of up to 50 email addresses to modify. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email\": \"example@braze.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /email/spam/remove:
    post:
      tags:
        - Email Lists & Addresses
      summary: Remove Email Addresses from Spam List
      description: |-
        Use this endpoint to remove email addresses from your Braze spam list. We will also remove them from the spam list maintained by your email provider.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `email` | Required | String or array | String email address to modify, or an array of up to 50 email addresses to modify. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email\": \"example@braze.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /email/blocklist:
    post:
      tags:
        - Email Lists & Addresses
      summary: Blocklist Email Addresses
      description: |-
        Use this endpoint to unsubscribe a user from email and mark them as hard bounced.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `email` | Required | String or array | String email address to blacklist, or an array of up to 50 email addresses to blocklist. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email\": [\"blocklist_email1\",\"blocklist_email2\"]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /email/blacklist:
    post:
      tags:
        - Email Lists & Addresses
      summary: Blacklist Email Addresses
      description: "> Braze has released the [`/email/blocklist` endpoint](https://www.braze.com/docs/api/endpoints/email/post_blocklist/) with the same functionality as the `/email/blacklist` endpoint. It is recommended to use the `/email/blocklist` endpoint instead.\n\n  \nUse this endpoint to unsubscribe a user from email and mark them as hard bounced.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email` | Required | String or array | String email address to blacklist, or an array of up to 50 email addresses to blacklist. |"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email\": [\"blacklist_email1\",\"blacklist_email2\"]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /campaigns/data_series:
    get:
      tags:
        - Export > Campaign
      summary: Campaign Analytics
      description: |-
        Use this endpoint to retrieve a daily series of various stats for a campaign over time. Data returned includes how many messages were sent, opened, clicked, or converted by messaging channel.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Responses

        ### Multichannel response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) date as ISO 8601 date,
                    "messages" : {
                        "ios_push" : [
                            {
                              "variation_name": "iOS_Push",
                              "sent" : (int),
                              "direct_opens" : (int),
                              "total_opens" : (int),
                              "bounces" : (int),
                              "body_clicks" : (int)
                              "revenue": 0,
                              "unique_recipients": 1,
                              "conversions": 0,
                              "conversions_by_send_time": 0,
                              "conversions1": 0,
                              "conversions1_by_send_time": 0,
                              "conversions2": 0,
                              "conversions2_by_send_time": 0,
                              "conversions3": 0,
                              "conversions3_by_send_time": 0,
                              "carousel_slide_[NUM]_[TITLE]_click": (optional, int),
                              "notif_button_[NUM]_[TITLE]_click": (optional, int)
                            }
                        ],
                        "android_push" : [
                            {
                              "sent" : (int),
                              "direct_opens" : (int),
                              "total_opens" : (int),
                              "bounces" : (int),
                              "body_clicks" : (int)
                            }
                        ],
                        "webhook": [
                            {
                              "sent": (int),
                              "errors": (int)
                            }
                        ],
                        "email" : [
                            {
                              "sent": (int),
                              "opens": (int),
                              "unique_opens": (int),
                              "clicks": (int),
                              "unique_clicks": (int),
                              "unsubscribes": (int),
                              "bounces": (int),
                              "delivered": (int),
                              "reported_spam": (int)
                            }
                        ],
                        "sms" : [
                          {
                            "sent": (int),
                            "delivered": (int),
                            "undelivered": (int),
                            "delivery_failed": (int)
                          }
                        ]
                      },
                   "conversions_by_send_time": (optional, int),
                   "conversions1_by_send_time": (optional, int),
                   "conversions2_by_send_time": (optional, int),
                   "conversions3_by_send_time": (optional, int),
                   "conversions": (int),
                   "conversions1": (optional, int),
                   "conversions2": (optional, int),
                   "conversions3": (optional, int),
                   "unique_recipients": (int),
                   "revenue": (optional, float)
                },
                ...
            ],
            ...
        }

        ```

        ### Multivariate response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "data" : [
                {
                    "time" : (string) date as ISO 8601 date,
                    "conversions" : (int),
                    "revenue": (float),
                    "conversions_by_send_time": (int),
                    "messages" : {
                       "trigger_in_app_message": [{
                              "variation_name": (optional, string),
                              "impressions": (int),
                              "clicks": (int),
                              "first_button_clicks": (int),
                              "second_button_clicks": (int),
                              "revenue": (optional, float),,
                              "unique_recipients": (int),
                              "conversions": (optional, int),
                              "conversions_by_send_time": (optional, int),
                              "conversions1": (optional, int),
                              "conversions1_by_send_time": (optional, int),
                              "conversions2": (optional, int),
                              "conversions2_by_send_time": (optional, int),
                              "conversions3": (optional, int),
                              "conversions3_by_send_time": (optional, int)
                          }, {
                              "variation_name": (optional, string),
                              "impressions": (int),
                              "clicks": (int),
                              "first_button_clicks": (int),
                              "second_button_clicks": (int),
                              "revenue": (optional, float),,
                              "unique_recipients": (int),
                              "conversions": (optional, int),
                              "conversions_by_send_time": (optional, int),
                              "conversions1": (optional, int),
                              "conversions1_by_send_time": (optional, int),
                              "conversions2": (optional, int),
                              "conversions2_by_send_time": (optional, int),
                              "conversions3": (optional, int).
                              "conversions3_by_send_time": (optional, int)
                          }, {
                              "variation_name": (optional, string),
                              "revenue": (optional, float),,
                              "unique_recipients": (int),
                              "conversions": (optional, int),
                              "conversions_by_send_time": (optional, int),
                              "conversions1": (optional, int),
                              "conversions1_by_send_time": (optional, int),
                              "conversions2": (optional, int),
                              "conversions2_by_send_time": (optional, int),
                              "conversions3": (optional, int),
                              "conversions3_by_send_time": (optional, int),
                              "enrolled": (optional, int)
                          }]
                      },
                      "conversions_by_send_time": (optional, int),
                      "conversions1_by_send_time": (optional, int),
                      "conversions2_by_send_time": (optional, int),
                      "conversions3_by_send_time": (optional, int),
                      "conversions": (optional, int,
                      "conversions1": (optional, int),
                      "conversions2": (optional, int),
                      "conversions3": (optional, int),
                      "unique_recipients": (int),
                      "revenue": (optional, float)
                 }],
                 ...
        }

        ```

        Possible message types are `email`, `in_app_message`, `webhook`, `android_push`, `apple_push`, `kindle_push`, `web_push`, `windows_phone8_push`, and `windows_universal_push`. All push message types will have the same statistics shown for `android_push` above.

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: campaign_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [campaign API identifier](https://www.braze.com/docs/api/identifier_types/).

            The `campaign_id` for API campaigns can be found on the **Developer Console** and the campaign details page within your dashboard, or you can use the [Campaign List Endpoint](https://www.braze.com/docs/api/endpoints/export/campaigns/get_campaign_analytics/#campaign-list-endpoint).
          example: '{{campaign_identifier}}'
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Max number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "7"
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: 2020-06-28T23:59:59-5:00
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /campaigns/details:
    get:
      tags:
        - Export > Campaign
      summary: Campaign Details
      description: "Use this endpoint to retrieve relevant information on a specified campaign, which can be identified by the `campaign_id`. If you want to retrieve Canvas data, refer to the [Canvas Details](https://www.braze.com/docs/api/endpoints/export/canvas/get_canvas_details/) endpoint.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Responses\n\n### Campaign details endpoint API response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"created_at\" : (string) date created as ISO 8601 date,\n    \"updated_at\" : (string) date last updated as ISO 8601 date,\n    \"archived\": (boolean) whether this Campaign is archived,\n    \"draft\": (boolean) whether this Campaign is a draft,\n    \"name\" : (string) campaign name,\n    \"description\" : (string) campaign description,\n    \"schedule_type\" : (string) type of scheduling action,\n    \"channels\" : (array) list of channels to send via,\n    \"first_sent\" : (string) date and hour of first sent as ISO 8601 date,\n    \"last_sent\" : (string) date and hour of last sent as ISO 8601 date,\n    \"tags\" : (array) tag names associated with the campaign,\n    \"messages\": {\n        \"message_variation_id\": (string) { // <=This is the actual id\n            \"channel\": (string) channel type of the message (as in, \"email\", \"ios_push\", \"webhook\", \"content_card\", \"in-app_message\", \"sms\"),\n            \"name\": (string) name of the message in the Dashboard (eg., \"Variation 1\")\n            ... channel-specific fields for this message, see below ...\n        }\n    },\n    \"conversion_behaviors\": (array) conversion event behaviors assigned to the campaign (see below)\n}\n\n```\n\n### Messages\n\nThe `messages` response will contain information about each message. The following includes example message responses for each channel:\n\n#### Push channels\n\n``` json\n{\n    \"channel\": (string) description of the channel, such as \"ios_push\" or \"android_push\"\n    \"alert\": (string) alert body text,\n    \"extras\": (hash) any key value pairs provided\n}\n\n```\n\n#### Email channel\n\n``` json\n{\n    \"channel\": \"email\",\n    \"subject\": (string) subject,\n    \"body\": (string) HTML body,\n    \"from\": (string) from address and display name,\n    \"reply_to\": (string) reply-to for message, if different than \"from\" address,\n    \"title\": (string) name of the email,\n    \"extras\": (hash) any key value pairs provided\n}\n\n```\n\n#### In-app message channel\n\n``` json\n{\n    \"type\": (string) description of in-app message type, such as \"survey\",\n    \"data\": {\n        \"pages\": [\n            {\n                \"header\": \n                    {\n                         \"text\":(string) display text for the header of the survey,\n                    }\n                \"choices\": [\n                    {\n                       \"choice_id\": (string) choice identifier,\n                       \"text\": (string) display text, \n                       \"custom_attribute_key\": (string) custom attribute key, \n                       \"custom_attribute_value\": (sting) custom attribute value,\n                       \"deleted\": (boolean) deleted from live campaign, \n                    },\n                    ...\n                ]\n            }\n        ]\n    }\n}\n\n```\n\n#### Content Card channel\n\n``` json\n{\n    \"channel\": \"content_cards\",\n    \"name\": (string) name of variant,\n    \"extras\": (hash) any key value pairs provided; only present if at least one key-value pair has been set\n}\n\n```\n\n#### Webhook channel\n\n``` json\n{\n    \"channel\": \"webhook\",\n    \"url\": (string) url for webhook,\n    \"body\": (string) payload body,\n    \"type\": (string) body content type,\n    \"headers\": (hash) specified request headers,\n    \"method\": (string) HTTP method (e.g., \"POST\" or \"GET\"),\n}\n\n```\n\n#### SMS channel\n\n``` json\n{\n  \"channel\": \"sms\",\n  \"body\": (string) payload body,\n  \"from\": (string) list of numbers associated with the subscription group,\n  \"subscription_group_id\": (string) API id of the subscription group targeted in the SMS message\n}\n\n```\n\n#### Control Messages\n\n``` json\n{\n    \"channel\": (string) description of the channel that the control is for,\n    \"type\": \"control\"\n}\n\n```\n\n### Conversion Behaviors\n\nThe `conversion_behaviors` array will contain information about each conversion event behavior set for the campaign. These behaviors are in order as set by the campaign. For example, Conversion Event A will be the first item in the array, Conversion Event B will be second, etc. The following lists example conversion event behavior responses:\n\n#### Clicks email\n\n``` json\n{\n    \"type\": \"Clicks Email\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours\n}\n\n```\n\n#### Opens email\n\n``` json\n{\n    \"type\": \"Opens Email\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours\n}\n\n```\n\n#### Makes purchase (any purchase)\n\n``` json\n{\n    \"type\": \"Makes Any Purchase\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours\n}\n\n```\n\n#### Makes purchase (specific product)\n\n``` json\n{\n    \"type\": \"Makes Specific Purchase\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"product\": (string) name of the product, i.e. - \"Feline Body Armor\"\n}\n\n```\n\n#### Performs custom event\n\n``` json\n{\n    \"type\": \"Performs Custom Event\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"custom_event_name\": (string) name of the event, i.e. - \"Used Feline Body Armor\"\n}\n\n```\n\n#### Upgrades app\n\n``` json\n{\n    \"type\": \"Upgrades App\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"app_ids\": (array|null) array of app ids, i.e. - [\"12345\", \"67890\"], or `null` if \"Track sessions for any app\" is selected in the UI\n}\n\n```\n\n#### Uses app\n\n``` json\n{\n    \"type\": \"Starts Session\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"app_ids\": (array|null) array of app ids, i.e. - [\"12345\", \"67890\"], or `null` if \"Track sessions for any app\" is selected in the UI\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: campaign_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [campaign API identifier](https://www.braze.com/docs/api/identifier_types/).

            The `campaign_id` for API campaigns can be found on the **Developer Console** and the campaign details page within your dashboard, or you can use the [Campaign List Endpoint](https://www.braze.com/docs/api/endpoints/export/campaigns/get_campaign_analytics/#campaign-list-endpoint).
          example: '{{campaign_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /campaigns/list:
    get:
      tags:
        - Export > Campaign
      summary: Campaign List
      description: "Use this endpoint to export a list of campaigns, each of which will include its name, campaign API identifier, whether it is an API campaign, and tags associated with the campaign. The campaigns are returned in groups of 100 sorted by time of creation (oldest to newest by default).\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Campaign list endpoint API response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"campaigns\" : [\n        {\n            \"id\" : (string) Campaign API Identifier,\n            \"last_edited\": (ISO 8601 string) the last edited time for the message \n            \"name\" : (string) campaign name,\n            \"is_api_campaign\" : (boolean) whether the campaign is an API Campaign,\n            \"tags\" : (array) tag names associated with the campaign\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: page
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            The page of campaigns to return, defaults to 0 (returns the first set of up to 100).
          example: "0"
        - name: include_archived
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include archived campaigns, defaults to false.
          example: "false"
        - name: sort_direction
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            - Sort creation time from newest to oldest: pass in the value `desc`.
            - Sort creation time from oldest to newest: pass in the value `asc`.

            If `sort_direction` is not included, the default order is oldest to newest.
          example: desc
        - name: last_edit.time[gt]
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Filters the results and only returns campaigns that were edited greater than the time provided till now. Format is `yyyy-MM-DDTHH:mm:ss`.
          example: 2020-06-28T23:59:59-5:00
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /sends/data_series:
    get:
      tags:
        - Export > Campaign
      summary: Send Analytics
      description: |-
        Use this endpoint to retrieve a daily series of various stats for a tracked `send_id`. Braze stores send analytics for 14 days after the send.

        Campaign conversions will be attributed towards the most recent send id that a given user has received from the campaign.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ### Send analytics endpoint API response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
                    "variation_name": (string) variation name,
                    "sent": (int) the number of sends,
                    "delivered": (int) the number of messages successfully delivered,
                    "undelivered": (int) the number of undelivered,
                    "delivery_failed": (int) the number of rejected,
                    "direct_opens": (int) the number of direct opens,
                    "total_opens": (int) the number of total opens,
                    "bounces": (int) the number of bounces,
                    "body_clicks": (int) the number of body clicks,
                    "revenue": (float) the number of dollars of revenue (USD),
                    "unique_recipients": (int) the number of unique recipients,
                    "conversions": (int) the number of conversions,
                    "conversions_by_send_time": (int) the number of conversions,
                    "conversions1": (int, optional) the number of conversions for the second conversion event,
                    "conversions1_by_send_time": (int, optional) the number of conversions for the second conversion event by send time,
                    "conversions2": (int, optional) the number of conversions for the third conversion event,
                    "conversions2_by_send_time": (int, optional) the number of conversions for the third conversion event by send time,
                    "conversions3": (int, optional) the number of conversions for the fourth conversion event,
                    "conversions3_by_send_time": (int, optional) the number of conversions for the fourth conversion event by send time
                  }
                ]
              },
              "conversions_by_send_time": 0,
              "conversions1_by_send_time": 0,
              "conversions2_by_send_time": 0,
              "conversions3_by_send_time": 0,
              "conversions": 0,
              "conversions1": 0,
              "conversions2": 0,
              "conversions3": 0,
              "unique_recipients": 1,
              "revenue": 0
            }
          ],
          "message": "success"
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: campaign_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Campaign API identifier](https://www.braze.com/docs/api/identifier_types/).
          example: '{{campaign_identifier}}'
        - name: send_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Send API identifier](https://www.braze.com/docs/api/identifier_types/).
          example: '{{send_identifier}}'
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Max number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "30"
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: "2014-12-10T23:59:59-05:00"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/data_series:
    get:
      tags:
        - Export > Canvas
      summary: Canvas Data Series Analytics
      description: |-
        Use this endpoint to export time series data for a Canvas.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "data": {
            "name": (string) Canvas name,
            "stats": [
              {
                "time": (string) date as ISO 8601 date,
                "total_stats": {
                  "revenue": (float),
                  "conversions": (int),
                  "conversions_by_entry_time": (int),
                  "entries": (int)
                },
                "variant_stats": (optional) {
                  "00000000-0000-0000-0000-0000000000000": (API identifier for variant) {
                    "name": (string) name of variant,
                    "revenue": (int),
                    "conversions": (int),
                    "conversions_by_entry_time": (int),
                    "entries": (int)
                  },
                  ... (more variants)
                },
                "step_stats": (optional) {
                  "00000000-0000-0000-0000-0000000000000": (API identifier for step) {
                    "name": (string) name of step,
                    "revenue": (float),
                    "conversions": (int),
                    "conversions_by_entry_time": (int),
                    "messages": {
                      "email": [
                        {
                          "sent": (int),
                          "opens": (int),
                          "unique_opens": (int),
                          "clicks": (int),
                          ... (more stats)
                        }
                      ],
                      ... (more channels)
                    }
                  },
                  ... (more steps)
                }
              },
              ... (more stats by time)
            ]
          },
          "message": (required, string) the status of the export, returns 'success' when completed without errors
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: canvas_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Canvas API Identifier](https://www.braze.com/docs/api/identifier_types/).
          example: '{{canvas_id}}'
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Required) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data export should end. Defaults to time of the request.
          example: 2018-05-30T23:59:59-5:00
        - name: starting_at
          in: query
          schema:
            type: string
          description: "(Optional*) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string) \n\nDate on which the data export should begin.\n\n*Either `length` or `starting_at` is required."
          example: 2018-05-28T23:59:59-5:00
        - name: length
          in: query
          schema:
            type: integer
          description: "(Optional*) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string) \n\nMaximum number of days before `ending_at` to include in the returned series. Must be between 1 and 14 (inclusive).\n\n*Either `length` or `starting_at` is required."
          example: "10"
        - name: include_variant_breakdown
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include variant stats (defaults to false).
          example: "true"
        - name: include_step_breakdown
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include step stats (defaults to false).
          example: "true"
        - name: include_deleted_step_data
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include step stats for deleted steps (defaults to false).
          example: "true"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/data_summary:
    get:
      tags:
        - Export > Canvas
      summary: Canvas Data Analytics Summary
      description: |-
        Use this endpoint allows to export rollups of time series data for a Canvas, providing a concise summary of a Canvas’ results.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "data": {
            "name": (string) Canvas name,
            "total_stats": {
              "revenue": (float),
              "conversions": (int),
              "conversions_by_entry_time": (int),
              "entries": (int)
            },
            "variant_stats": (optional) {
              "00000000-0000-0000-0000-0000000000000": (API identifier for variant) {
                "name": (string) name of variant,
                "revenue": (float),
                "conversions": (int),
                "entries": (int)
              },
              ... (more variants)
            },
            "step_stats": (optional) {
              "00000000-0000-0000-0000-0000000000000": (API identifier for step) {
                "name": (string) name of step,
                "revenue": (float),
                "conversions": (int),
                "conversions_by_entry_time": (int),
                "messages": {
                  "android_push": (name of channel) [
                    {
                      "sent": (int),
                      "opens": (int),
                      "influenced_opens": (int),
                      "bounces": (int)
                      ... (more stats for channel)
                    }
                  ],
                  ... (more channels)
                }
              },
              ... (more steps)
            }
          },
          "message": (required, string) the status of the export, returns 'success' when completed without errors
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: canvas_id
          in: query
          schema:
            type: string
          description: "(Required) String \n\nSee [Canvas API identifier](https://www.braze.com/docs/api/identifier_types/)."
          example: '{{canvas_id}}'
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Required) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)
            Date on which the data export should end. Defaults to time of the request
          example: 2018-05-30T23:59:59-5:00
        - name: starting_at
          in: query
          schema:
            type: string
          description: |-
            (Optional*) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data export should begin.

            *Either `length` or `starting_at` is required.
          example: 2018-05-28T23:59:59-5:00
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Optional*) Integer

            Max number of days before `ending_at` to include in the returned series. Must be between 1 and 14 (inclusive).

            *Either `length` or `starting_at` is required.
          example: "5"
        - name: include_variant_breakdown
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include variant stats (defaults to false).
          example: "true"
        - name: include_step_breakdown
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include step stats (defaults to false).
          example: "true"
        - name: include_deleted_step_data
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include step stats for deleted steps (defaults to false).
          example: "true"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/details:
    get:
      tags:
        - Export > Canvas
      summary: Canvas Details
      description: |-
        Use this endpoint to export metadata about a Canvas, such as the name, time created, current status, and more.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "created_at": (string) date created as ISO 8601 date,
          "updated_at": (string) date updated as ISO 8601 date,
          "name": (string) Canvas name,
          "description": (string) Canvas description,
          "archived": (boolean) whether this Canvas is archived,
          "draft": (boolean) whether this Canvas is a draft,
          "schedule_type": (string) type of scheduling action,
          "first_entry": (string) date of first entry as ISO 8601 date,
          "last_entry": (string) date of last entry as ISO 8601 date,
          "channels": (array of strings) step channels used with Canvas,
          "variants": [
            {
              "name": (string) name of variant,
              "id": (string) API identifier of the variant,
              "first_step_ids": (array of strings) API identifiers for first steps in variant,
              "first_step_id": (string) API identifier of first step in variant (deprecated in November 2017, only included if the variant has only one first step)
            },
            ... (more variations)
          ],
          "tags": (array of strings) tag names associated with the Canvas,
          "steps": [
            {
              "name": (string) name of step,
              "id": (string) API identifier of the step,
              "next_step_ids": (array of strings) API identifiers of steps following step,
              "channels": (array of strings) channels used in step,
              "messages": {
                  "message_variation_id": (string) {  // <=This is the actual id
                      "channel": (string) channel type of the message (eg., "email"),
                      ... channel-specific fields for this message, see Campaign Details Endpoint API Response for example message responses ...
                  }
              }
            },
            ... (more steps)
          ],
          "message": (required, string) the status of the export, returns 'success' when completed without errors
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: canvas_id
          in: query
          schema:
            type: string
          description: "(Required) String\n\nSee [Canvas API Identifier](https://www.braze.com/docs/api/identifier_types/) "
          example: '{{canvas_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/list:
    get:
      tags:
        - Export > Canvas
      summary: Canvas List
      description: |-
        Use this endpoint to export a list of Canvases, including the name, Canvas API identifier and associated tags. Canvases are returned in groups of 100 sorted by time of creation (oldest to newest by default).

        Archived Canvases will not be included in the API response unless the `include_archived` field is specified. Canvases that are stopped but not archived, however, will be returned by default.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "canvases" : [
              {
                  "id" : (string) Canvas API Identifier,
                  "last_edited": (ISO 8601 string) the last edited time for the message,
                  "name" : (string) Canvas name,
                  "tags" : (array) tag names associated with the Canvas,
              },
            ... (more Canvases)
          ],
          "message": (required, string) the status of the export, returns 'success' when completed without errors
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: page
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            The page of Canvases to return, defaults to `0` (returns the first set of up to 100).
          example: "1"
        - name: include_archived
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include archived Canvases, defaults to `false`.
          example: "false"
        - name: sort_direction
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            - Sort creation time from newest to oldest: pass in the value `desc`.
            - Sort creation time from oldest to newest: pass in the value `asc`.

            If `sort_direction` is not included, the default order is oldest to newest.
          example: desc
        - name: last_edit.time[gt]
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Filters the results and only returns Canvases that were edited greater than the time provided till now. Format is `yyyy-MM-DDTHH:mm:ss`.
          example: 2020-06-28T23:59:59-5:00
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /events/list:
    get:
      tags:
        - Export > Custom Events
      summary: Custom Events List
      description: |-
        Use this endpoint to export a list of custom events that have been recorded for your app. The event names are returned in groups of 250, sorted alphabetically.

        ## Rate limit

        For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/purchases/product_list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "events" : [
                "Event A",
                "Event B",
                "Event C",
                ...
            ]
        }

        ```

        ### Fatal error response codes

        The following status codes and associated error messages will be returned if your request encounters a fatal error. Any of these error codes indicate that no data will be processed.

        | Error Code | Reason / Cause |
        | --- | --- |
        | 400 Bad Request | Bad Syntax |
        | 401 Unauthorized | Unknown or missing REST API Key |
        | 429 Rate Limited | Over rate limit |
        | 5XX | Internal server error, you should retry with exponential backoff |

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: page
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            The page of event names to return, defaults to 0 (returns the first set of up to 250).
          example: "3"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /events/data_series:
    get:
      tags:
        - Export > Custom Events
      summary: Custom Events Analytics
      description: |-
        Use this endpoint to retrieve a series of the number of occurrences of a custom event in your app over a designated time period.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) point in time - as ISO 8601 extended when unit is "hour" and as ISO 8601 date when unit is "day",
                    "count" : (int)
                },
                ...
            ]
        }

        ```

        ### Fatal error response codes

        The following status codes and associated error messages will be returned if your request encounters a fatal error. Any of these error codes indicate that no data will be processed.

        | Error Code | Reason / Cause |
        | --- | --- |
        | 400 Bad Request | Bad Syntax |
        | 401 Unauthorized | Unknown or missing REST API Key |
        | 429 Rate Limited | Over rate limit |
        | 5XX | Internal server error, you should retry with exponential backoff |

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: event
          in: query
          schema:
            type: string
          description: "(Required) String\n\nThe name of the custom event for which to return analytics. "
          example: event_name
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Maximum number of units (days or hours) before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "24"
        - name: unit
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            Unit of time between data points - can be `day` or `hour`, defaults to `day`.
          example: hour
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: "2014-12-10T23:59:59-05:00"
        - name: app_id
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            App API identifier retrieved from the **Developer Console** to limit analytics to a specific app.
          example: '{{app_identifier}}'
        - name: segment_id
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            See [Segment API identifier](https://www.braze.com/docs/api/identifier_types/). Segment ID indicating the analytics-enabled segment for which event analytics should be returned.
          example: '{{segment_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /kpi/new_users/data_series:
    get:
      tags:
        - Export > KPI
      summary: Daily New Users by Date
      description: |-
        Use this endpoint to retrieve a daily series of the total number of new users on each date.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) date as ISO 8601 date,
                    "new_users" : (int)
                },
                ...
            ]
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Maximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "14"
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: 2018-06-28T23:59:59-5:00
        - name: app_id
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            App API identifier retrieved from the **Developer Console**. if excluded, results for all apps in app group will be returned.
          example: '{{app_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /kpi/dau/data_series:
    get:
      tags:
        - Export > KPI
      summary: Daily Active Users by Date
      description: |-
        Use this endpoint to retrieve a daily series of the total number of unique active users on each date.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) date as ISO 8601 date,
                    "dau" : (int)
                },
                ...
            ]
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Maximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "10"
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional)  Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)
            Date on which the data series should end. Defaults to time of the request.
          example: 2018-06-28T23:59:59-5:00
        - name: app_id
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            App API identifier retrieved from the **Developer Console**. if excluded, results for all apps in app group will be returned.
          example: '{{app_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /kpi/mau/data_series:
    get:
      tags:
        - Export > KPI
      summary: Monthly Active Users for Last 30 Days
      description: |-
        Use this endpoint to retrieve a daily series of the total number of unique active users over a 30-day rolling window.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) date as ISO 8601 date,
                    "mau" : (int)
                },
                ...
            ]
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Maximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "7"
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional)  Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: "2018-06-28T23:59:59-05:00"
        - name: app_id
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            App API identifier retrieved from the **Developer Console**. if excluded, results for all apps in app group will be returned.
          example: '{{app_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /kpi/uninstalls/data_series:
    get:
      tags:
        - Export > KPI
      summary: KPIs for Daily App Uninstalls by Date
      description: |-
        Use this endpoint to retrieve a daily series of the total number of uninstalls on each date.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) date as ISO 8601 date,
                    "uninstalls" : (int)
                },
                ...
            ]
        }

        ```

        > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Maximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "14"
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional)  Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: 2018-06-28T23:59:59-5:00
        - name: app_id
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            App API identifier retrieved from the **Developer Console**. if excluded, results for all apps in app group will be returned.
          example: '{{app_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /feed/data_series:
    get:
      tags:
        - Export > News Feed
      summary: News Feed Card Analytics
      description: |-
        Use this endpoint to retrieve a daily series of engagement stats for a card over time.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) point in time - as ISO 8601 extended when unit is "hour" and as ISO 8601 date when unit is "day",
                    "clicks" : (int) ,
                    "impressions" : (int),
                    "unique_clicks" : (int),
                    "unique_impressions" : (int)
                },
                ...
            ]
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: card_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Card API identifier](https://www.braze.com/docs/api/identifier_types/).

            The `card_id` for a given card can be found in the **Developer Console** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/).
          example: '{{card_identifier}}'
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Max number of units (days or hours) before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive).
          example: "14"
        - name: unit
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            Unit of time between data points. Can be `day` or `hour`, defaults to `day`.
          example: day
        - name: ending_at
          in: query
          schema:
            type: string
          description: |
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: 2018-06-28T23:59:59-5:00
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /feed/details:
    get:
      tags:
        - Export > News Feed
      summary: News Feed Cards Details
      description: |-
        Use this endpoint to retrieve relevant information on a card, which can be identified by the `card_id`.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) The status of the export, returns 'success' when completed without errors,
            "created_at" : (string) Date created as ISO 8601 date,
            "updated_at" : (string) Date last updated as ISO 8601 date,
            "name" : (string) Card name,
            "publish_at" : (string) Date card was published as ISO 8601 date,
            "end_at" : (string) Date card will stop displaying for users as ISO 8601 date,
            "tags" : (array) Tag names associated with the card,
            "title" : (string) Title of the card,
            "image_url" : (string) Image URL used by this card,
            "extras" : (dictionary) Dictionary containing key-value pair data attached to this card,
            "description" : (string) Description text used by this card,
            "archived": (boolean) whether this Card is archived,
            "draft": (boolean) whether this Card is a draft,
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: card_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Card API identifier](https://www.braze.com/docs/api/identifier_types/).

            The `card_id` for a given card can be found in the **Developer Console** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/).
          example: '{{card_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /feed/list:
    get:
      tags:
        - Export > News Feed
      summary: News Feed Cards List
      description: |-
        Use this endpoint to export a list of News Feed cards, each of which will include its name and card API identifier. The cards are returned in groups of 100 sorted by time of creation (oldest to newest by default).

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "cards" : [
                {
                    "id" : (string) Card API Identifier,
                    "type" : (string) type of the card - NewsItem (classic cards), CaptionedImage, Banner or DevPick (cross-promotional cards),
                    "title" : (string) title of the card,
                    "tags" : (array) tag names associated with the card
                },
                ...
            ]
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: page
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            The page of cards to return, defaults to 0 (returns the first set of up to 100).
          example: "1"
        - name: include_archived
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            Whether or not to include archived cards, defaults to false.
          example: "true"
        - name: sort_direction
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            - Sort creation time from newest to oldest: pass in the value `desc`.
            - Sort creation time from oldest to newest: pass in the value `asc`.

            If `sort_direction` is not included, the default order is oldest to newest.
          example: desc
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /purchases/product_list:
    get:
      tags:
        - Export > Purchases
      summary: Product IDs List
      description: |-
        Use this endpoint to return a paginated lists of product IDs.

        ## Rate limit

        For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/events/list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "products": [
            "5499334426779",
            "5499334819995",
            "5499335442587",
            "5499335835803",
            "Calendula Face Mask Peel",
            "Dior Lip Gloss",
            "Rice Bowl",
            "product_name"
          ],
          "message": "success"
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: page
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            The page of your product list that you would like to view.
          example: "1"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /segments/list:
    get:
      tags:
        - Export > Segment
      summary: Segment List
      description: |-
        Use this endpoint to export a list of segments, each of which will include its name, Segment API identifier, and whether it has analytics tracking enabled. The segments are returned in groups of 100 sorted by time of creation (oldest to newest by default). Archived segments are not included.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "segments" : [
                {
                    "id" : (string) Segment API Identifier,
                    "name" : (string) segment name,
                    "analytics_tracking_enabled" : (boolean) whether the segment has analytics tracking enabled,
                    "tags" : (array) tag names associated with the segment
                },
                ...
            ]
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: page
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            The page of segments to return, defaults to 0 (returns the first set of up to 100).
          example: "1"
        - name: sort_direction
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            - Sort creation time from newest to oldest: pass in the value `desc`.
            - Sort creation time from oldest to newest: pass in the value `asc`.

            If `sort_direction` is not included, the default order is oldest to newest.
          example: desc
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /segments/data_series:
    get:
      tags:
        - Export > Segment
      summary: Segment Analytics
      description: |-
        Use this endpoint to retrieve a daily series of the estimated size of a segment over time.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) date as ISO 8601 date,
                    "size" : (int) size of the segment on that date
                },
                ...
            ]
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: segment_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Segment API identifier](https://www.braze.com/docs/api/identifier_types/).

            The `segment_id` for a given segment can be found in your **Developer Console** within your Braze account or you can use the [Segment List Endpoint](https://www.braze.com/docs/api/endpoints/export/get_segment/).
          example: '{{segment_identifier}}'
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Max number of days before `ending_at` to include in the returned series - must be between 1 and 100 (inclusive).
          example: "14"
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: 2018-06-27T23:59:59-5:00
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /segments/details:
    get:
      tags:
        - Export > Segment
      summary: Segment Details
      description: "Use this endpoint to retrieve relevant information on a segment, which can be identified by the `segment_id`.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n      \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n      \"created_at\" : (string) date created as ISO 8601 date,\n      \"updated_at\" : (string) date last updated as ISO 8601 date,\n      \"name\" : (string) segment name,\n      \"description\" : (string) human-readable description of filters,\n      \"text_description\" : (string) segment description, \n      \"tags\" : (array) tag names associated with the segment\n}\n\n```"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: segment_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Segment API identifier](https://www.braze.com/docs/api/identifier_types/).

            The `segment_id` for a given segment can be found in your **Developer Console** within your Braze account or you can use the [Segment List Endpoint](https://www.braze.com/docs/api/endpoints/export/get_segment/).
          example: '{{segment_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /sessions/data_series:
    get:
      tags:
        - Export > Session Analytics
      summary: App Sessions by Time
      description: |-
        Use this endpoint to retrieve a series of the number of sessions for your app over a designated time period.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "message": (required, string) the status of the export, returns 'success' when completed without errors,
            "data" : [
                {
                    "time" : (string) point in time - as ISO 8601 extended when unit is "hour" and as ISO 8601 date when unit is "day",
                    "sessions" : (int)
                },
                ...
            ]
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: length
          in: query
          schema:
            type: integer
          description: |-
            (Required) Integer

            Max number of days before `ending_at` to include in the returned series - must be between 1 and 100 (inclusive).
          example: "14"
        - name: unit
          in: query
          schema:
            type: string
          description: "(Optional) String\n\nUnit of time between data points. Can be `day` or `hour`, defaults to `day`. "
          example: day
        - name: ending_at
          in: query
          schema:
            type: string
          description: |-
            (Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)

            Date on which the data series should end. Defaults to time of the request.
          example: 2018-06-28T23:59:59-5:00
        - name: app_id
          in: query
          schema:
            type: string
          description: |-
            (Optional) String

            App API identifier retrieved from the **Developer Console** to limit analytics to a specific app.
          example: '{{app_identifier}}'
        - name: segment_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [Segment API identifier](https://www.braze.com/docs/api/identifier_types/).

            The `segment_id` for a given segment can be found in your **Developer Console** within your Braze account or you can use the [Segment List Endpoint](https://www.braze.com/docs/api/endpoints/export/get_segment/).
          example: '{{segment_identifier}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/export/ids:
    post:
      tags:
        - Export > Users
      summary: User Profile Export by Identifier
      description: "Use this endpoint to export data from any user profile by specifying a user identifier. Up to 50 `external_ids` or `user_aliases` can be included in a single request. Should you want to specify `device_id` or `email_address` only one of either identifier can be included per request.\n\n## Rate limit\n\nWe apply a rate limit of 2,500 requests per minute to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `external_ids` | Optional | Array of strings | External identifiers for users you wish export. |\n| `user_aliases` | Optional | Array of user alias object | [User aliases](https://www.braze.com/docs/api/objects_filters/user_alias_object/) for users to export. |\n| `device_id` | Optional | String | Device identifier, as returned by various SDK methods such as `getDeviceId`. |\n| `braze_id` | Optional | String | Braze identifier for a particular user. |\n| `email_address` | Optional | String | Email address of user. |\n| `phone` | Optional | String in [E.164](https://en.wikipedia.org/wiki/E.164) format | Phone number of user. |\n| `fields_to_export` | Optional | Array of strings | Name of user data fields to export. Defaults to all if not provided. |\n\n### Fields to export\n\nThe following is a list of valid `fields_to_export`. Using `fields_to_export` to minimize the data returned can improve response time of this API endpoint:\n\n\\* `apps`  \n\\* `attributed_campaign`  \n\\* `attributed_source`  \n\\* `attributed_adgroup`  \n\\* `attributed_ad`  \n\\* `braze_id`  \n\\* `campaigns_received`  \n\\* `canvases_received`  \n\\* `cards_clicked`  \n\\* `country`  \n\\* `created_at`  \n\\* `custom_attributes`  \n\\* `custom_events`  \n\\* `devices`  \n\\* `dob`  \n\\* `email`  \n\\* `email_subscribe`  \n\\* `external_id`  \n\\* `first_name`  \n\\* `gender`  \n\\* `home_city`  \n\\* `language`  \n\\* `last_coordinates`  \n\\* `last_name`  \n\\* `phone`  \n\\* `purchases`  \n\\* `push_subscribe`  \n\\* `push_tokens`  \n\\* `random_bucket`  \n\\* `time_zone`  \n\\* `total_revenue`  \n\\* `uninstalled_at`  \n\\* `user_aliases`\n\nBe aware that the `/users/export/ids` endpoint will pull together the entire user profile for this user, including data such as all campaigns and Canvases received, all custom events performed, all purchases made, and all custom attributes. As a result, this endpoint is slower than other REST API endpoints.\n\nDepending on the data requested, this API endpoint may not be sufficient to meet your needs due to the 2,500 requests per minute rate limit. If you anticipate using this endpoint regularly to export users, instead consider exporting users by segment, which is asynchronous and more optimized for larger data pulls.\n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"users\" : (array of object) the data for each of the exported users, may be empty if no users are found,\n    \"invalid_user_ids\" : (optional, array of string) each of the identifiers provided in the request that did not correspond to a known user\n}\n\n```\n\nFor an example of the data that is accessible via this endpoint see the following example.\n\n### Sample user export file output\n\nUser export object (we will include the least data possible - if a field is missing from the object it should be assumed to be null, false, or empty):\n\n``` json\n{\n    \"external_id\" : (string),\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : (string),\n        \"alias_label\" : (string)\n      }\n    ],\n    \"braze_id\": (string),\n    \"first_name\" : (string),\n    \"last_name\" : (string),\n    \"email\" : (string),\n    \"dob\" : (string) date for the user's date of birth,\n    \"home_city\" : (string),\n    \"country\" : (string),\n    \"phone\" : (string),\n    \"language\" : (string) ISO-639 two letter code,\n    \"time_zone\" : (string),\n    \"last_coordinates\" : (array of float) [lon, lat],\n    \"gender\" : (string) \"M\" | \"F\",\n    \"total_revenue\" : (float),\n    \"attributed_campaign\" : (string),\n    \"attributed_source\" : (string),\n    \"attributed_adgroup\" : (string),\n    \"attributed_ad\" : (string),\n    \"push_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"email_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"custom_attributes\" : (object) custom attribute key-value pairs,\n    \"custom_events\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"purchases\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"devices\" : [\n        {\n            \"model\" : (string),\n            \"os\" : (string),\n            \"carrier\" : (string),\n            \"idfv\" : (string) only included for iOS devices,\n            \"idfa\" : (string) only included for iOS devices when IDFA collection is enabled,\n            \"google_ad_id\" : (string) only included for Android devices when Google Play Advertising Identifier collection is enabled,\n            \"roku_ad_id\" : (string) only included for Roku devices,\n            \"windows_ad_id\" : (string) only included for Windows devices,\n            \"ad_tracking_enabled\" : (bool)\n        },\n        ...\n    ],\n    \"push_tokens\" : [\n        {\n            \"app\" : (string) app name,\n            \"platform\" : (string),\n            \"token\" : (string)\n        },\n        ...\n    ],\n    \"apps\" : [\n        {\n            \"name\" : (string),\n            \"platform\" : (string),\n            \"version\" : (string),\n            \"sessions\" : (integer),\n            \"first_used\" : (string) date,\n            \"last_used\" : (string) date\n        },\n        ...\n    ],\n    \"campaigns_received\" : [\n        {\n            \"name\" : (string),\n            \"last_received\" : (string) date,\n            \"engaged\" : {\n                \"opened_email\" : (bool),\n                \"opened_push\" : (bool),\n                \"clicked_email\" : (bool),\n                \"clicked_triggered_in_app_message\" : (bool)\n            },\n            \"converted\" : (bool),\n            \"api_campaign_id\" : (string),\n            \"variation_name\" : (optional, string) exists only if it is a multivariate campaign,\n            \"variation_api_id\" : (optional, string) exists only if it is a multivariate campaign,\n            \"in_control\" : (optional, bool) exists only if it is a multivariate campaign\n        },\n        ...\n    ],\n    \"canvases_received\": [\n        {\n            \"name\": (string),\n            \"api_canvas_id\": (string),\n            \"last_received_message\": (string) date,\n            \"last_entered\": (string) date,\n            \"variation_name\": (string),\n            \"in_control\": (bool),\n            \"last_exited\": (string) date,\n            \"steps_received\": [\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                }\n            ]\n        },\n        ...\n    ],\n    \"cards_clicked\" : [\n        {\n            \"name\" : (string)\n        },\n        ...\n    ]\n}\n\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"external_ids\": [\"user_identifier1\", \"user_identifier2\"],\n  \"user_aliases\": [\n    {\n      \"alias_name\": \"example_alias\",\n      \"alias_label\": \"example_label\"\n    }\n  ],\n  \"device_id\": \"1234567\",\n  \"braze_id\": \"braze_identifier\",\n  \"email_address\": \"example@braze.com\",\n  \"phone\": \"+11112223333\",\n  \"fields_to_export\": [\"first_name\", \"email\", \"purchases\"]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/export/segment:
    post:
      tags:
        - Export > Users
      summary: User Profile Export by Segment
      description: "Use this endpoint to export all the users within a segment. User data is exported as multiple files of user JSON objects separated by new lines (i.e., one JSON object per line).\n\nData is exported to an automatically generated URL, or to an S3 bucket if this integration is already set up.\n\nThis endpoint is currently not supported by Google Cloud Storage.\n\nNote that a company may run at most one export per segment using this endpoint at a given time. Wait for your export to complete before retrying.\n\n> Beginning December 2021, the following changed for this API:\n> \n> 1\\. The fields_to_export field in this API request is required. The option to default to all fields has been removed.  \n> 2\\. The fields for custom_events, purchases, campaigns_received, and canvases_received only contain data from the last 90 days.\n\n> Warning: Individual custom attributes cannot be exported. However, all custom attributes can be exported by including `custom_attributes` in the `fields_to_export` array (e.g., \\[‘first_name’, ‘email’, ‘custom_attributes’\\]).\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Credential-based response details\n\nFor information regarding credentials-based response details, visit this [section](https://www.braze.com/docs/api/endpoints/export/user_data/post_users_segment/#credentials-based-response-details) in the Braze API docs.\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `segment_id` | Required | String | Identifier for the segment to be exported. See [segment identifier](https://www.braze.com/docs/api/identifier_types/).  <br>  <br>The segment_id for a given segment can be found in your **Developer Console** within your Braze account or you can use the [Segment List Endpoint](https://www.braze.com/docs/api/endpoints/export/segments/get_segment/). |\n| `callback_endpoint` | Optional | String | Endpoint to post a download URL to when the export is available. |\n| `fields_to_export` | Required\\* | Array of strings | Name of user data fields to export, you may also export custom attributes.  <br>  <br>\\*Beginning April 2021, new accounts must specify specific fields to export. |\n| `output_format` | Optional | String | When using your own S3 bucket, allows you to specify file format as `zip` or `gzip`. Defaults to ZIP file format. |\n\n### Fields to export\n\nThe following is a list of valid `fields_to_export`. Using `fields_to_export` to minimize the data returned can improve response time of this API endpoint:\n\n- `apps`\n- `attributed_campaign`\n- `attributed_source`\n- `attributed_adgroup`\n- `attributed_ad`\n- `braze_id`\n- `campaigns_received`\n- `canvases_received`\n- `cards_clicked`\n- `country`\n- `created_at`\n- `custom_attributes`\n- `custom_events`\n- `devices`\n- `dob`\n- `email`\n- `email_subscribe`\n- `external_id`\n- `first_name`\n- `gender`\n- `home_city`\n- `language`\n- `last_coordinates`\n- `last_name`\n- `phone`\n- `purchases`\n- `push_subscribe`\n- `push_tokens`\n- `random_bucket`\n- `time_zone`\n- `total_revenue`\n- `uninstalled_at`\n- `user_aliases`\n    \n\n### Important reminders\n\n- The fields for `custom_events`, `purchases`, `campaigns_received`, and `canvases_received` will contain only contain data from the last 90 days.\n- Both `custom_events` and `purchases` contain fields for `first` and `count`. Both of these fields will reflect information from all time, and will not be limited to just data from the last 90 days. For example, if a particular user first did the event prior to 90 days ago, this will be accurately reflected in the `first` field, and the `count` field will take into account events that occurred prior to the last 90 days as well.\n- The number of concurrent segment exports a company can run at the endpoint level is capped at 100. Attempts that surpass this limit will result in an error.\n    \n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"object_prefix\": (required, string) the filename prefix that will be used for the JSON file produced by this export, e.g. 'bb8e2a91-c4aa-478b-b3f2-a4ee91731ad1-1464728599',\n    \"url\" : (optional, string) the URL where the segment export data can be downloaded if you do not have your own S3 credentials\n}\n\n```\n\nOnce made available, the URL will only be valid for a few hours. As such, we highly recommend that you add your own S3 credentials to Braze.\n\n### Sample user export file output\n\nUser export object (we will include the least data possible - if a field is missing from the object it should be assumed to be null, false, or empty):\n\n``` json\n{\n    \"external_id\" : (string),\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : (string),\n        \"alias_label\" : (string)\n      }\n    ],\n    \"braze_id\": (string),\n    \"first_name\" : (string),\n    \"last_name\" : (string),\n    \"email\" : (string),\n    \"dob\" : (string) date for the user's date of birth,\n    \"home_city\" : (string),\n    \"country\" : (string),\n    \"phone\" : (string),\n    \"language\" : (string) ISO-639 two letter code,\n    \"time_zone\" : (string),\n    \"last_coordinates\" : (array of float) [lon, lat],\n    \"gender\" : (string) \"M\" | \"F\",\n    \"total_revenue\" : (float),\n    \"attributed_campaign\" : (string),\n    \"attributed_source\" : (string),\n    \"attributed_adgroup\" : (string),\n    \"attributed_ad\" : (string),\n    \"push_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"email_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"custom_attributes\" : (object) custom attribute key value pairs,\n    \"custom_events\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"purchases\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"devices\" : [\n        {\n            \"model\" : (string),\n            \"os\" : (string),\n            \"carrier\" : (string),\n            \"idfv\" : (string) only included for iOS devices,\n            \"idfa\" : (string) only included for iOS devices when IDFA collection is enabled,\n            \"google_ad_id\" : (string) only included for Android devices when Google Play Advertising Identifier collection is enabled,\n            \"roku_ad_id\" : (string) only included for Roku devices,\n            \"windows_ad_id\" : (string) only included for Windows devices,\n            \"ad_tracking_enabled\" : (bool)\n        },\n        ...\n    ],\n    \"push_tokens\" : [\n        {\n            \"app\" : (string) app name,\n            \"platform\" : (string),\n            \"token\" : (string)\n        },\n        ...\n    ],\n    \"apps\" : [\n        {\n            \"name\" : (string),\n            \"platform\" : (string),\n            \"version\" : (string),\n            \"sessions\" : (string),\n            \"first_used\" : (string) date,\n            \"last_used\" : (string) date\n        },\n        ...\n    ],\n    \"campaigns_received\" : [\n        {\n            \"name\" : (string),\n            \"last_received\" : (string) date,\n            \"engaged\" : {\n                \"opened_email\" : (bool),\n                \"opened_push\" : (bool),\n                \"clicked_email\" : (bool),\n                \"clicked_in_app_message\" : (bool)\n            },\n            \"converted\" : (bool),\n            \"api_campaign_id\" : (string),\n            \"variation_name\" : (optional, string) exists only if it is a multivariate campaign,\n            \"variation_api_id\" : (optional, string) exists only if it is a multivariate campaign,\n            \"in_control\" : (optional, bool) exists only if it is a multivariate campaign\n        },\n        ...\n    ],\n    \"canvases_received\": [\n        {\n            \"name\": (string),\n            \"api_canvas_id\": (string),\n            \"last_received_message\": (string) date,\n            \"last_entered\": (string) date,\n            \"variation_name\": (string),\n            \"in_control\": (bool),\n            \"last_exited\": (string) date,\n            \"steps_received\": [\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                }\n            ]\n        },\n        ...\n    ],\n    \"cards_clicked\" : [\n        {\n            \"name\" : (string)\n        },\n        ...\n    ]\n}\n\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"segment_id\" : \"segment_identifier\",\n  \"callback_endpoint\" : \"example_endpoint\",\n  \"fields_to_export\" : [\"first_name\", \"email\", \"purchases\"],\n  \"output_format\" : \"zip\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/export/global_control_group:
    post:
      tags:
        - Export > Users
      summary: User Profile Export by Global Control Group
      description: "Use this endpoint to export all users within a Global Control Group. User data is exported as multiple files of user JSON objects separated by new lines (i.e., one JSON object per line).\n\n> Warning: Individual custom attributes cannot be exported. However, all custom attributes can be exported by including custom_attributes in the fields_to_export array (e.g.,\\[‘first_name’, ‘email’, ‘custom_attributes’\\]).\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).\n\n## Credential-based response details\n\nFor information regarding credentials-based response details, visit this [section](https://www.braze.com/docs/api/endpoints/export/user_data/post_users_global_control_group/#credentials-based-response-details) in the Braze API docs.\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `callback_endpoint` | Optional | String | Endpoint to post a download URL to when the export is available. |\n| `fields_to_export` | Required\\* | Array of strings | Name of user data fields to export, you may also export custom attributes.  <br>  <br>\\*Beginning April 2021, new accounts must specify specific fields to export. |\n| `output_format` | Optional | String | When using your own S3 bucket, allows to specify file format as `zip` or `gzip`. Defaults to ZIP file format. |\n\n## Fields to export\n\nThe following is a list of valid fields_to_export. Using fields_to_export to minimize the data returned can improve response time of this API endpoint:\n\n- `apps`\n- `attributed_campaign`\n- `attributed_source`\n- `attributed_adgroup`\n- `attributed_ad`\n- `braze_id`\n- `country`\n- `created_at`\n- `custom_attributes`\n- `custom_events`\n- `devices`\n- `dob`\n- `email`\n- `external_id`\n- `first_name`\n- `gender`\n- `home_city`\n- `language`\n- `last_coordinates`\n- `last_name`\n- `phone`\n- `purchases`\n- `random_bucket`\n- `time_zone`\n- `total_revenue`\n- `uninstalled_at`\n- `user_aliases`\n    \n\n## Response\n\n```\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"object_prefix\": (required, string) the filename prefix that will be used for the JSON file produced by this export, e.g.,'bb8e2a91-c4aa-478b-b3f2-a4ee91731ad1-1464728599',\n    \"url\" : (optional, string) the URL where the segment export data can be downloaded if you do not have your own S3 credentials\n}\n\n```\n\nOnce made available, the URL will only be valid for a few hours. As such, we highly recommend that you add your own S3 credentials to Braze.\n\n### Sample user export file output\n\nUser export object (we will include the least data possible - if a field is missing from the object it should be assumed to be null, false, or empty):\n\n```\n{\n    \"external_id\" : (string),\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : (string),\n        \"alias_label\" : (string)\n      }\n    ],\n    \"braze_id\": (string),\n    \"first_name\" : (string),\n    \"last_name\" : (string),\n    \"email\" : (string),\n    \"dob\" : (string) date for the user's date of birth,\n    \"home_city\" : (string),\n    \"country\" : (string),\n    \"phone\" : (string),\n    \"language\" : (string) ISO-639 two letter code,\n    \"time_zone\" : (string),\n    \"last_coordinates\" : (array of float) [lon, lat],\n    \"gender\" : (string) \"M\" | \"F\",\n    \"total_revenue\" : (float),\n    \"attributed_campaign\" : (string),\n    \"attributed_source\" : (string),\n    \"attributed_adgroup\" : (string),\n    \"attributed_ad\" : (string),\n    \"custom_attributes\" : (object) custom attribute key-value pairs,\n    \"custom_events\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"purchases\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"devices\" : [\n        {\n            \"model\" : (string),\n            \"os\" : (string),\n            \"carrier\" : (string),\n            \"idfv\" : (string) only included for iOS devices,\n            \"idfa\" : (string) only included for iOS devices when IDFA collection is enabled,\n            \"google_ad_id\" : (string) only included for Android devices when Google Play Advertising Identifier collection is enabled,\n            \"roku_ad_id\" : (string) only included for Roku devices,\n            \"windows_ad_id\" : (string) only included for Windows devices,\n            \"ad_tracking_enabled\" : (bool)\n        },\n        ...\n    ],\n    \"apps\" : [\n        {\n            \"name\" : (string),\n            \"platform\" : (string),\n            \"version\" : (string),\n            \"sessions\" : (string),\n            \"first_used\" : (string) date,\n            \"last_used\" : (string) date\n        },\n        ...\n    ],\n}\n\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"callback_endpoint\" : \"\",\n  \"fields_to_export\" : [\"email\", \"braze_id\"],\n  \"output_format\" : \"zip\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /messages/scheduled_broadcasts:
    get:
      tags:
        - Messaging > Schedule Mesages
      summary: Get Upcoming Scheduled Campaigns and Canvases
      description: |-
        Use this endpoint to return a JSON list of information about scheduled campaigns and entry Canvases between now and a designated `end_time` specified in the request. Daily, recurring messages will only appear once with their next occurrence. Results returned in this endpoint are only for campaigns and Canvases created and scheduled in Braze.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
            "scheduled_broadcasts": [
              # Example Canvas
              {
                "name" => String,
                "id" => String,
                "type" => "Canvas",
                "tags" => [String tag names],
                "next_send_time" => "YYYY-MM-DD HH:mm:ss" (may also include time zone if not local/intelligent delivery)
                "schedule_type" => one of "local_time_zones", "intelligent_delivery", or the name of your company's time zone
              },
              # Example Campaign
              {
                "name" => String,
                "id" => String,
                "type" => "Campaign",
                "tags" => [String tag names],
                "next_send_time" => "YYYY-MM-DD HH:mm:ss" (may also include time zone if not local/intelligent delivery)
                "schedule_type" => one of "local_time_zones", "intelligent_delivery", or the name of your company's time zone
              },
            ]
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: end_time
          in: query
          schema:
            type: string
          description: |-
            (Required) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format

            End date of the range to retrieve upcoming scheduled Campaigns and Canvases. This is treated as midnight in UTC time by the API.
          example: "2018-09-01T00:00:00-04:00"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /messages/schedule/delete:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Delete Scheduled Messages
      description: |-
        Use this endpoint to cancel a message that you previously scheduled before it has been sent.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `schedule_id` | Required | String | The schedule_id to delete (obtained from the response to create schedule). |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"schedule_id\": \"schedule_identifier\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /campaigns/trigger/schedule/delete:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Delete Scheduled API Triggered Campaigns
      description: |-
        The delete schedule endpoint allows you to cancel a message that you previously scheduled API-triggered Canvases before it has been sent.

        Scheduled messages or triggers that are deleted very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second deletions could be applied to all, some, or none of your targeted users.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/). |
        | `schedule_id` | Required | String | The `schedule_id` to delete (obtained from the response to create schedule). |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"campaign_id\": \"campaign_identifier\",\n  \"schedule_id\": \"schedule_identifier\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/trigger/schedule/delete:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Delete Scheduled API-Triggered Canvases
      description: |-
        Use this endpoint to cancel a Canvas message that you previously scheduled via API-triggered before it has been sent.

        Scheduled messages or triggers that are deleted very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second deletions could be applied to all, some, or none of your targeted users.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `canvas_id` | Required | String | See [Canvas identifier](https://braze.com/docs/api/identifier_types/). |
        | `schedule_id` | Required | String | The `schedule_id` to delete (obtained from the response to create schedule). |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                canvas_id: canvas_identifier
                schedule_id: schedule_identifier
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /messages/schedule/create:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Create Scheduled Messages
      description: "Use this endpoint to schedule a campaign, Canvas, or other message to be sent at a designated time (up to 90 days in the future) and provides you with an identifier to reference that message for updates. If you are targeting a segment, a record of your request will be stored in the [Developer Console](https://dashboard.braze.com/app_settings/developer_console/activitylog/)  after all scheduled messages have been sent.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific external_ids, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your message to a larger than expected audience. |\n| `external_user_ids` | Optional | Array of strings | See [external user identifier](https://www.braze.com/docs/api/parameters/#external-user-id). |\n| `user_aliases` | Optional | Array of user alias objects | See [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `segment_id` | Optional | String | See [segment identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `recipients` | Optional | Array of recipients objects | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `override_messaging_limits` | Optional | Boolean | Ignore global rate limits for campaigns, defaults to false |\n| `recipient_subscription_state` | Optional | String | Use this to send messages to only users who have opted in (`opted_in`), only users who have subscribed or are opted in (`subscribed`) or to all users, including unsubscribed users (`all`).  <br>  <br>Using `all` users is useful for transactional email messaging. Defaults to `subscribed`. |\n| `schedule` | Required | Schedule object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/) |\n| `messages` | Optional | Messaging object | See available [messaging objects](https://www.braze.com/docs/api/objects_filters/#messaging-objects). |"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: |-
                {
                  "broadcast": "false",
                  "external_user_ids": "external_user_identifiers",
                  "user_aliases": {
                    "alias_name" : "example_name",
                    "alias_label" : "example_label"
                  },
                  "segment_id": "segment_identifiers",
                  "audience": {
                    "AND": [
                      {
                        "custom_attribute": {
                          "custom_attribute_name": "eye_color",
                          "comparison": "equals",
                          "value": "blue"
                        }
                      },
                      {
                        "custom_attribute": {
                          "custom_attribute_name": "favorite_foods",
                          "comparison": "includes_value",
                          "value": "pizza"
                        }
                      },
                      {
                        "OR": [
                          {
                            "custom_attribute": {
                              "custom_attribute_name": "last_purchase_time",
                              "comparison": "less_than_x_days_ago",
                              "value": 2
                            }
                          },
                          {
                            "push_subscription_status": {
                              "comparison": "is",
                              "value": "opted_in"
                            }
                          }
                        ]
                      },
                      {
                        "email_subscription_status": {
                          "comparison": "is_not",
                          "value": "subscribed"
                        }
                      },
                      {
                        "last_used_app": {
                          "comparison": "after",
                          "value": "2019-07-22T13:17:55+0000"
                        }
                      }
                    ]
                  },
                  "campaign_id": "campaign_identifier",
                  "send_id": "send_identifier",
                  "override_messaging_limits": false,
                  "recipient_subscription_state": "subscribed",
                  "schedule": {
                    "time": "",
                    "in_local_time": true,
                    "at_optimal_time": true
                  },
                  "messages": {
                    "apple_push": (optional, Apple Push Object),
                    "android_push": (optional, Android Push Object),
                    "windows_push": (optional, Windows Phone 8 Push Object),
                    "windows8_push": (optional, Windows Universal Push Object),
                    "kindle_push": (optional, Kindle/FireOS Push Object),
                    "web_push": (optional, Web Push Object),
                    "email": (optional, Email object)
                    "webhook": (optional, Webhook object)
                    "content_card": (optional, Content Card Object)
                  }
                }
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /campaigns/trigger/schedule/create:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Schedule API Triggered Campaigns
      description: "Use this endpoint to send dashboard created campaign messages (up to 90 days in advance) via API-triggered delivery, allowing you to decide what action should trigger the message to be sent. You can pass in `trigger_properties` that will be templated into the message itself.\n\nNote that to send messages with this endpoint, you must have a Campaign ID, created when you build an [API-Triggered Campaign](https://www.braze.com/docs/api/api_campaigns/).\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific external_ids, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/) |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `recipients` | Optional | Array of recipient objects | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your message to a larger than expected audience. |\n| `trigger_properties` | Optional | Object | Personalization key-value pairs for all users in this send. See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). |\n| `schedule` | Required | Schedule object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\",\n  \"recipients\": [\n    {\n      \"user_alias\": \"example_alias\",\n      \"external_user_id\": \"external_user_identifier\",\n      \"trigger_properties\": {}\n    }\n  ],\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"broadcast\": false,\n  \"trigger_properties\": {},\n  \"schedule\": {\n    \"time\": \"\",\n    \"in_local_time\": false,\n    \"at_optimal_time\": false\n  }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/trigger/schedule/create:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Schedule API Triggered Canvases
      description: "Use this endpoint to schedule Canvas messages (up to 90 days in advance) via API-triggered delivery, allowing you to decide what action should trigger the message to be sent. You can pass in `canvas_entry_properties` that will be templated into the messages sent by the first steps of the Canvas.\n\nNote that to send messages with this endpoint, you must have a Canvas ID, created when you build a [Canvas](https://www.braze.com/docs/api/identifier_types/#canvas-api-identifier).\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific external_ids, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `canvas_id` | Required | String | See [Canvas identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `recipients` | Optional | Array of recipient objects | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your message to a larger than expected audience. |\n| `trigger_properties` | Optional | Object | Personalization key-value pairs for all users in this send. See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). |\n| `schedule` | Required | Schedule object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"canvas_id\": \"canvas_identifier\",\n  \"recipients\": [\n    {\n      \"user_alias\": \"example_alias\",\n      \"external_user_id\": \"external_user_identifier\",\n      \"trigger_properties\": \"\",\n      \"canvas_entry_properties\": {}\n    }\n  ],\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"broadcast\": false,\n  \"canvas_entry_properties\": {},\n  \"schedule\": {\n    \"time\": \"\",\n    \"in_local_time\": false,\n    \"at_optimal_time\": false\n  }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /messages/schedule/update:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Update Scheduled Messages
      description: |-
        Use this endpoint to update scheduled messages. This endpoint accepts updates to either the `schedule` or `messages` parameter or both. Your request must contain at least one of those two keys.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `schedule_id` | Required | String | The `schedule_id` to update (obtained from the response to create schedule). |
        | `schedule` | Optional | Object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |
        | `messages` | Optional | Object | See available [message objects](https://www.braze.com/docs/api/objects_filters/#messaging-objects). |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"schedule_id\": \"schedule_identifier\",\n  \"schedule\": {\n    \"time\": \"2017-05-24T20:30:36Z\"\n   },\n  \"messages\": {\n    \"apple_push\": {\n      \"alert\": \"Updated Message!\",\n      \"badge\": 1\n    },\n    \"android_push\": {\n      \"title\": \"Updated title!\",\n      \"alert\": \"Updated message!\"\n    },\n    \"sms\": {  \n      \"subscription_group_id\": \"subscription_group_identifier\",\n      \"message_variation_id\": \"message_variation_identifier\",\n      \"body\": \"This is my SMS body.\",\n      \"app_id\": \"app_identifier\"\n    }\n  }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /campaigns/trigger/schedule/update:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Update Scheduled API Triggered Campaigns
      description: |-
        Use this endpoint to update scheduled API-triggered campaigns created in the dashboard, allowing you to decide what action should trigger the message to be sent. You can pass in `trigger_properties` that will be templated into the message itself.

        Note that to send messages with this endpoint, you must have a Campaign ID, created when you build an [API-Triggered Campaign](https://www.braze.com/docs/api/api_campaigns/).

        Any schedule will completely overwrite the one that you provided in the create schedule request or in previous update schedule requests. For example, if you originally provide `"schedule" : {"time" : "2015-02-20T13:14:47", "in_local_time" : true}` and then in your update you provide `"schedule" : {"time" : "2015-02-20T14:14:47"}`, your message will now be sent at the provided time in UTC, not in the user's local time. Scheduled triggers that are updated very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second changes could be applied to all, some, or none of your targeted users.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/) |
        | `schedule_id` | Optional | String | The `schedule_id` to update (obtained from the response to create schedule). |
        | `schedule` | Required | Object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"campaign_id\": \"campaign_identifier\",\n  \"schedule_id\": \"schedule_identifier\",\n  \"schedule\": {\n    \"time\": \"2017-05-24T21:30:00Z\",\n    \"in_local_time\": true\n  }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/trigger/schedule/update:
    post:
      tags:
        - Messaging > Schedule Mesages
      summary: Update Scheduled API Triggered Canvases
      description: |-
        Use this endpoint to update scheduled API-triggered Canvases that were created in the dashboard. This allows you to decide what action should trigger the message to be sent. You can pass in `trigger_properties` that will be templated into the message itself.

        Note that to send messages with this endpoint, you must have a Canvas ID, created when you build a [Canvas](https://www.braze.com/docs/api/identifier_types/#canvas-api-identifier).

        Any schedule will completely overwrite the one that you provided in the create schedule request or in previous update schedule requests. For example, if you originally provide `"schedule" : {"time" : "2015-02-20T13:14:47", "in_local_time" : true}` and then in your update you provide `"schedule" : {"time" : "2015-02-20T14:14:47"}`, your message will now be sent at the provided time in UTC, not in the user's local time. Scheduled triggers that are updated very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second changes could be applied to all, some, or none of your targeted users.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `canvas_id` | Required | String | See [Canvas identifier](https://www.braze.com/docs/api/identifier_types/). |
        | `schedule_id` | Optional | String | The `schedule_id` to update (obtained from the response to create schedule). |
        | `schedule` | Required | Object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"canvas_id\": \"canvas_identifier\",\n  \"schedule_id\": \"schedule_identifier\",\n  \"schedule\": {\n    \"time\": \"2017-05-24T21:30:00Z\",\n    \"in_local_time\": true\n  }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /sends/id/create:
    post:
      tags:
        - Messaging > Send Messages
      summary: Create Send IDs For Message Send Tracking
      description: |-
        Use this endpoint to create send IDs that can be used to send messages and track message performance programatically, without campaign creation for each send. Using the Send Identifier to track and send messages is useful if you are planning to programmatically generate and send content.

        ## Rate limit

        The daily maximum number of custom send identifiers that can be created via this endpoint is 100 for a given app group. Each `send_id` and `campaign_id` combination that you create will count towards your daily limit. The response headers for any valid request include the current rate limit status, see [API rate limits](https://www.braze.com/docs/api/api_limits/) for details.

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `campaign_id` | Required | String | See [campaign identifier]({{site.baseurl}}/api/identifier_types/). |
        | `send_id` | Optional | String | See [send identifier]({{site.baseurl}}/api/identifier_types/). |

        ## Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "message": "success",
          "send_id" : "example_send_id"
        }

        ```
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /messages/send:
    post:
      tags:
        - Messaging > Send Messages
      summary: Sending Messages Immediately via API Only
      description: "Use this endpoint to send immediate, ad-hoc messages to designated users via the Braze API. Be sure to include Messaging Objects in your body to complete your requests.\n\nIf you are targeting a segment, a record of your request will be stored in the [Developer Console](https://dashboard.braze.com/app_settings/developer_console/activitylog/) .\n\n## Rate limit\n\nWhen specifying a segment or Connected Audience in your request, we apply a rate limit of 250 requests per minute to this endpoint. Otherwise, if specifying an `external_id`, this endpoint has a default rate limit of 250,000 requests per hour, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific `external_ids`, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your messages to a larger than expected audience. |\n| `external_user_ids` | Optional | Array of strings | See [external user ID](https://www.braze.com/docs/api/parameters/#external-user-id). |\n| `user_aliases` | Optional | Array of user alias objects | See [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/). |\n| `segment_id` | Optional | String | See [segment identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `campaign_id` | Optional\\* | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/) for more information.  <br>  <br>\\*Required if you wish to track campaign stats (e.g. sends, clicks, bounces, etc) on the Braze dashboard. |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/) |\n| `override_frequency_capping` | Optional | Boolean | Ignore \\`frequency_capping\\` for campaigns, defaults to false. |\n| `recipient_subscription_state` | Optional | String | Use this to send messages to only users who have opted in (`opted_in`), only users who have subscribed or are opted in (`subscribed`) or to all users, including unsubscribed users (`all`).  <br>  <br>Using `all` users is useful for transactional email messaging. Defaults to `subscribed`. |\n| `messages` | Optional | Messaging objects | See available [messaging objects](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_messages/#available-messaging-objects). |\n\n## Response details\n\nMessage sending endpoint responses will include the message’s `dispatch_id` for reference back to the dispatch of the message. The `dispatch_id` is the id of the message dispatch (unique id for each ‘transmission’ sent from the Braze platform). For more, information refer to [Dispatch ID behavior](https://www.braze.com/docs/help/help_articles/data/dispatch_id/)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"broadcast\": \"false\",\n  \"external_user_ids\": \"external_user_identifiers\",\n  \"user_aliases\": {\n    \"alias_name\": \"example_name\",\n    \"alias_label\": \"example_label\"\n  },\n  \"segment_id\": \"segment_identifier\",\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\",\n  \"override_frequency_capping\": \"false\",\n  \"recipient_subscription_state\": \"all\",\n  \"messages\": {\n    \"android_push\": \"(optional, Android Push Object)\",\n    \"apple_push\": \"(optional, Apple Push Object)\",\n    \"content_card\": \"(optional, Content Card Object)\",\n    \"email\": \"(optional, Email Object)\",\n    \"kindle_push\": \"(optional, Kindle/FireOS Push Object)\",\n    \"web_push\": \"(optional, Web Push Object)\",\n    \"windows_phone8_push\": \"(optional, Windows Phone 8 Push Object)\",\n    \"windows_universal_push\": \"(optional, Windows Universal Push Object)\"\n  }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /transactional/v1/campaigns/YOUR_CAMPAIGN_ID_HERE/send:
    post:
      tags:
        - Messaging > Send Messages
      summary: Sending Transactional Email via API Triggered Delivery
      description: |-
        Use this endpoint to send immediate, ad-hoc transactional messages to a designated user. This endpoint is used alongside the creation of a [Transactional Email campaign](https://www.braze.com/docs/api/api_campaigns/transactional_campaigns) and corresponding campaign ID.

        > **Important:** Transactional Email is currently available as part of select Braze packages. Reach out to your Braze customer success manager for more details.

        Similar to the [Send Triggered Campaign endpoint](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_triggered_campaigns/), this campaign type allows you to house message content inside of the Braze dashboard while dictating when and to whom a message is sent via your API. Unlike the Send Triggered Campaign endpoint, which accepts an audience or segment to send messages to, a request to this endpoint must specify a single user either by `external_user_id` or `user_alias`, as this campaign type is purpose-built for 1:1 messaging of alerts like order confirmations or password resets.

        ## Rate limit

        Transactional Emails are not subject to a rate limit. Depending on your chosen package, a set number of Transactional Emails is covered per hour by SLA. Requests that exceed that rate will still send, but are not covered by SLA. 99.9% of emails will send in less than one minute.

        ## Request Parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `external_send_id` | Optional | String | A Base64 compatible string. Validated against the following regex `/^[a-zA-Z0-9-_+\/=]+$/`. This optional field allows you to pass an internal identifier for this particular send which will be included in events sent from the Transactional HTTP event postback. When passed, this identifier will also be used as a deduplication key, which Braze will store for 24 hours. Passing the same identifier in another request will not result in a new instance of a send by Braze for 24 hours. |
        | `trigger_properties` | Optional | Object | See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). Personalization key-value pairs that will apply to the user in this request. |
        | `recipients` | Required | Object | The user you are targeting this message to. Can contain `attributes` and a single `external_user_id` or `user_alias`.  <br>  <br>Note that if you provide an external user ID that doesn’t already exist in Braze, passing any fields to the `attributes` object will create this user profile in Braze and send this message to the newly created user.  <br>  <br>If you send multiple requests to the same user with different data in the `attributes` object, Braze will ensure that `first_name`, `last_name`, and `email` attributes will be updated synchronously and templated into your message. Custom attributes don’t have this same protection, so proceed with caution when updating a user through this API and passing different custom attribute values in quick succession. |

        ## Response

        The send transactional email endpoint will respond with the message’s `dispatch_id` which represents the instance of this message send. This identifier can be used along with events from the Transactional HTTP event postback to trace the status of an individual email sent to a single user.

        ### Example response

        ``` json
        {
            "dispatch_id": Out-of-the-box generated Unique ID of the instance of this send
            "status": Current status of the message
            "metadata": Object containing additional information about the send instance
        }

        ```

        ### Transactional HTTP Event Postback

        All transactional emails are complemented with event status postbacks sent as an HTTP request back to your specified URL. This will allow you to evaluate the message status in real-time and take action to reach the user on another channel if the message goes undelivered, or fallback to an internal system if Braze is experiencing latency.

        In order to associate the incoming events to a particular instance of send, you can choose to either capture and store the Braze `dispatch_id` returned in the [API response](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_transactional_message/#example-response), or pass your own identifier to the `external_send_id` field. An example of a value you may choose to pass to that field may be an order ID, where after completing order 1234, an order confirmation message is triggered to the user through Braze, and `external_send_id : 1234` is included in the request. All following event postbacks such as `Sent` and `Delivered` will include `external_send_id : 1234` in the payload allowing you to confirm that user successfully received their order confirmation email.

        To get started using the Transactional HTTP Event Postback, navigate to **Manage Settings** > **Email Settings** > **Transactional Webpush URL** in your Braze dashboard and input your desired URL to receive postbacks.

        ### Postback body

        ``` json
        // Sent Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "sent",
            "metadata": {
              "received_at": "2020-08-31T18:58:41.000+00:00",
              "enqueued_at": "2020-08-31T18:58:41.000+00:00",
              "executed_at": "2020-08-31T18:58:41.000+00:00",
              "sent_at": "2020-08-31T18:58:42.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Processed Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "processed",
            "metadata": {
              "processed_at": "2020-08-31T18:58:42.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Aborted
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "aborted",
            "metadata": {
              "reason": "User not emailable",
              "aborted_at": "2020-08-31T19:04:51.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Delivered Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "delivered",
            "metadata": {
              "delivered_at": "2020-08-31T18:27:32.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Bounced Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "bounced",
            "metadata": {
              "bounced_at": "2020-08-31T18:58:43.000+00:00",
              "reason": "550 5.1.1 The email account that you tried to reach does not exist",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }

        ```

        #### Message status

        | **Status** | **Description** |
        | --- | --- |
        | `sent` | Message successfully dispatched to Braze’s email sending partner |
        | `processed` | Email sending partner has successfully received and prepared the message for sending to the user’s inbox provider |
        | `aborted` | Braze was unable to successfully dispatch the message due to the user not having an emailable address, or Liquid abort logic was called in the message body. All aborted events include a reason field within the metadata object indicating why the message was aborted |
        | `delivered` | Message was accepted by the user’s email inbox provider |
        | `bounced` | Message was rejected by the user’s email inbox provider. All bounced events include a reason field within the metadata object reflecting the bounce error code provided by the inbox provider |

        ### Example postback

        ``` json
        // Sent Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "sent",
            "metadata": {
              "received_at": "2020-08-31T18:58:41.000+00:00",
              "enqueued_at": "2020-08-31T18:58:41.000+00:00",
              "executed_at": "2020-08-31T18:58:41.000+00:00",
              "sent_at": "2020-08-31T18:58:42.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Processed Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "processed",
            "metadata": {
              "processed_at": "2020-08-31T18:58:42.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Aborted
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "aborted",
            "metadata": {
              "reason": "User not emailable",
              "aborted_at": "2020-08-31T19:04:51.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Delivered Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "delivered",
            "metadata": {
              "delivered_at": "2020-08-31T18:27:32.000+00:00",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }
        // Bounced Event
        {
            "dispatch_id": "acf471119f7449d579e8089032003ded",
            "status": "bounced",
            "metadata": {
              "bounced_at": "2020-08-31T18:58:43.000+00:00",
              "reason": "550 5.1.1 The email account that you tried to reach does not exist",
              "campaign_api_id": "417220e4-5a2a-b634-7f7d-9ec891532368",
              "external_send_id" : "34a2ceb3cf6184132f3d816e9984269a"
            }
        }

        ```
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"external_send_id\": \"external_send_id\",\n  \"trigger_properties\": \"\",\n  \"recipients\":[\n    {\n      // Either \"external_user_id\" or \"user_alias\" is required. Requests must specify only one.\n      \"user_alias\": \"user_alias\",\n      \"external_user_id\": \"external_user_id\",\n      \"attributes\": {\n        \"first_name\" : \"Alex\"\n      }\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /campaigns/trigger/send:
    post:
      tags:
        - Messaging > Send Messages
      summary: Sending Campaign Messages via API Triggered Delivery
      description: "Use this endpoint to send immediate, ad-hoc messages to designated users via API-triggered delivery. API-triggered delivery allows you to house message content inside of the Braze dashboard while dictating when a message is sent, and to whom via your API.\n\nIf you are targeting a segment, a record of your request will be stored in the [Developer Console](https://dashboard.braze.com/app_settings/developer_console/activitylog/) . Note that to send messages with this endpoint, you must have a Campaign ID created when you build an [API-triggered campaign](https://www.braze.com/docs/api/api_campaigns/).\n\n## Rate limit\n\nWhen specifying a segment or Connected Audience in your request, we apply a rate limit of 250 requests per minute to this endpoint. Otherwise, if specifying an `external_id`, this endpoint has a default rate limit of 250,000 requests per hour, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific `external_ids`, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `trigger_properties` | Optional | Object | See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). Personalization key-value pairs that will apply to all users in this request. |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your campaign to a larger than expected audience. |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `recipients` | Optional | Array | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). If not provided and `broadcast` is set to true, the message will send to the entire segment targeted by the campaign. |\n\nThe recipients array may contain up to 50 objects, with each object containing a single `external_user_id` string and `trigger_properties` object.\n\nWhen `send_to_existing_only` is `true`, Braze will only send the message to existing users. When `send_to_existing_only` is `false` and a user with the given `id` does not exist, Braze will create a user with that id and attributes before sending the message.\n\nFor more information on the \"broadcast\" flag, check out [Broadcast](https://www.braze.com/docs/api/parameters/#broadcast) within our [API Parameters](https://www.braze.com/docs/api/parameters) documentation.\n\n## Response details\n\nMessage sending endpoint responses will include the message’s `dispatch_id` for reference back to the dispatch of the message. The `dispatch_id` is the ID of the message dispatch, a unique ID for each transmission sent from the Braze platform. When using this endpoint, you receive a single `dispatch_id` for an entire batched set of users. For more information on `dispatch_id` check out out our documentation on [Dispatch ID Behavior](https://www.braze.com/docs/help/help_articles/data/dispatch_id/).\n\n## Create send endpoint\n\n**Using the attributes object in campaigns**\n\nBraze has a Messaging Object called `Attributes` that will allow you to add, create, or update attributes and values for a user before you send them an API-triggered campaigns using the `campaign/trigger/send` endpoint as this API call will process the User Attributes object before it processes and sends the campaign. This helps minimize the risk of there being issues caused by [race conditions](https://www.braze.com/docs/help/best_practices/race_conditions/).\n\n> **Important:** Looking for the Canvas version of this endpoint? Check out [Sending Canvas messages via API-triggered delivery](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_triggered_canvases/#create-send-endpoint)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\",\n  \"trigger_properties\": \"\",\n  \"broadcast\": false,\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"recipients\": [\n    {\n      \"user_alias\": {\n        \"alias_name\" : \"example_name\",\n        \"alias_label\" : \"example_label\"\n      },\n      \"external_user_id\": \"external_user_identifier\",\n      \"trigger_properties\": \"\",\n      \"send_to_existing_only\": true,\n      \"attributes\": {\n        \"first_name\" : \"Alex\"\n      }\n    }\n  ]\n}\n"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /canvas/trigger/send:
    post:
      tags:
        - Messaging > Send Messages
      summary: Sending Canvas Messages via API Triggered Delivery
      description: "Use this endpoint to send Canvas messages via API-triggered delivery. API-triggered Delivery allows you to house message content inside of the Braze dashboard while dictating when a message is sent, and to whom via your API.\n\nNote that to send messages with this endpoint, you must have a Canvas ID, created when you build a [Canvas](https://www.braze.com/docs/api/identifier_types/#canvas-api-identifier).\n\n## Rate limit\n\nWhen specifying a segment or Connected Audience in your request, we apply a rate limit of 250 requests per minute to this endpoint. Otherwise, if specifying an `external_id`, this endpoint has a default rate limit of 250,000 requests per hour, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific `external_ids`, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `canvas_id` | Required | String | See [Canvas identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `canvas_entry_properties` | Optional | Object | See [Canvas entry properties](https://www.braze.com/docs/api/objects_filters/canvas_entry_properties_object/). Personalization key-value pairs that will apply to all users in this request. The Canvas entry properties object has a maximum size limit of 50 KB. |\n| `broadcast` | Optional | Boolean | See [Broadcast](https://braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your Canvas to a larger than expected audience. |\n| `audience` | Optional | Connected audience object | See [Connected audience](https://braze.com/docs/api/objects_filters/connected_audience/). |\n| `recipients` | Optional | Array | See [Recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). If not provided and `broadcast` is set to true, the message will send to the entire segment targeted by the Canvas.  <br>  <br>The `recipients` array may contain up to 50 objects, with each object containing a single `external_user_id` string and `canvas_entry_properties` object. Either `external_user_id` or user_alias is required for this call. Requests must specify only one.  <br>  <br>When `send_to_existing_only` is true, Braze will only send the message to existing users—however this flag can’t be used with user aliases. When `send_to_existing_only` is `false` and a user with the given `id` does not exist, Braze will create a user with that ID and attributes before sending the message. |\n\nCustomers using the API for server-to-server calls may need to whitelist the appropriate API URL if they’re behind a firewall.\n\n> **Note:** If you include both specific users in your API call and a target segment in the dashboard, the message will send to specifically the user profiles that are in the API call and qualify for the segment filters.\n\n## Response details\n\nMessage sending endpoint responses will include the message’s `dispatch_id` for reference back to the dispatch of the message. The `dispatch_id` is the ID of the message dispatch (unique ID for each “transmission” sent from the Braze platform). Check out [Dispatch ID behavior](https://www.braze.com/docs/help/help_articles/data/dispatch_id/) for more information.\n\n## Create send endpoint\n\n**Using the Attributes Object in Canvas**\n\nBraze has a Messaging Object called `Attributes` that allows you to add, create, or update attributes and values for a user before sending them an API-Triggered Canvas using the `canvas/trigger/send` endpoint as this API call will process the User Attributes object before it processes and sends the Canvas. This helps minimize the risk of there being issues caused by [race conditions](https://www.braze.com/docs/help/best_practices/race_conditions/).\n\n> **Important:** Looking for the camaigns version of this endpoint? Check out [Sending campaign messages via API-triggered delivery](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_triggered_campaigns/)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"canvas_id\": \"canvas_identifier\",\n  \"canvas_entry_properties\": {\"product_name\" : \"shoes\", \"product_price\" : 79.99},\n  \"broadcast\": false,\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"recipients\": [\n    {\n      \"user_alias\": {\n        \"alias_name\" : \"example_name\",\n        \"alias_label\" : \"example_label\"\n      },\n      \"external_user_id\": \"user_identifier\",\n      \"trigger_properties\": \"\",\n      \"canvas_entry_properties\": \"\",\n      \"send_to_existing_only\": true,\n      \"attributes\": {\n          \"first_name\" : \"Alex\"\n      }\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /scim/v2/Users/YOUR_ID_HERE:
    delete:
      tags:
        - SCIM
      summary: Remove Dashboard User Account
      description: |-
        This endpoint allows you to permanently delete an existing dashboard user by specifying the resource `id` returned by the SCIM [`POST`](https://www.braze.com/docs/scim/post_create_user_account/) method. This is similar to deleting a user in the **Manage Users** section of the Braze dashboard. For information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).

        ## Rate limit

        This endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Request parameters

        | Parameter | Required | Data type | Description |
        | --- | --- | --- | --- |
        | `id` | Required | String | The user’s resource ID. This parameter is returned by the `POST` `/scim/v2/Users/` or `GET` `/scim/v2/Users?filter=userName eq "[user@test.com](mailto:user@test.com)"` methods. |

        ## Response

        ``` json
        HTTP/1.1 204 Not Found
        Content-Type: text/html; charset=UTF-8

        ```

        ## Error states

        If a developer with this ID doesn’t exist in Braze, the endpoint will respond with:

        ``` json
        HTTP/1.1 404 Not Found Content-Type: text/html; charset=UTF-8
        { "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"], "detail": "User not found", "status": 404 }

        ```
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-Request-Origin
          in: header
          schema:
            type: string
          example: ' YOUR-REQUEST-ORIGIN-HERE'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer YOUR-SCIM-TOKEN-HERE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - SCIM
      summary: Look Up an Existing Dashboard User Account
      description: "This endpoint allows you to look up an existing dashboard user account by specifying the resource `id` returned by the SCIM [`POST`](https://www.braze.com/docs/scim/post_create_user_account/) method. For information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, DELETE, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data type | Description |\n| --- | --- | --- | --- |\n| `id` | Required | String | The user’s resource ID. This parameter is returned by the `POST` `/scim/v2/Users/` or `GET` `/scim/v2/Users?filter=userName eq \"user@test.com\"` methods. |\n\n## Response\n\n``` json\n{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupId\": \"241adcd25789fabcded\",\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamId\": \"241adcd25789fabcded\",\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"admin\"]\n                    }\n                ]\n            } \n        ]\n    }\n}\n\n```"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-Request-Origin
          in: header
          schema:
            type: string
          example: ' YOUR-REQUEST-ORIGIN-HERE'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer YOUR-SCIM-TOKEN-HERE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - SCIM
      summary: Update Dashboard User Account
      description: "This endpoint allows you to update an existing dashboard user account by specifying the resource `id` returned by the SCIM [`POST`](https://www.braze.com/docs/scim/post_create_user_account/) method. It allows you to update of given and family names, permissions (for setting permissions at the company, app group, and team level) and department. For information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\nFor security reasons, `userName` (email address) cannot be updated through this endpoint. If you would like to change the `userName` (email address) for a user, contact [Support](https://www.braze.com/docs/support_contact/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` GET, DELETE, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).  \n  \n## Request parameters\n\n| Parameter | Required | Data type | Description |\n| --------- | -------- | --------- | ----------- |\n| `id` | Required | String | The user’s resource ID. This parameter is returned by the  `POST` `/scim/v2/Users/` or `GET`  `/scim/v2/Users?filter=userName eq \"user@test.com\"` methods. |\n| `schemas` | Required | Array of strings | Expected SCIM 2.0 schema name for user object. |\n| `name` | Required | JSON object | This object contains the user's given name and family name. |\n| `department` | Required | String | Valid department string from the [department string documentation]({{site.baseurl}}/scim_api_appendix/#department-strings). |\n| `permissions` | Required | JSON object | Permissions object as described in the [permissions object documentation]({{site.baseurl}}/scim_api_appendix/#permissions-object). |\n\n## Response\n\n``` json\n{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupId\": \"241adcd25789fabcded\",\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamId\": \"2519dafcdba238ae7\",\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"admin\"]\n                    }\n                ]\n            } \n        ]\n    }\n}\n\n```\n\n### Error states\n\nIf a user with this ID doesn’t exist in Braze, the endpoint will respond with:\n\n``` json\nHTTP/1.1 404 Not Found\nContent-Type: text/html; charset=UTF-8\n{\n    \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\n    \"detail\": \"User not found\",\n    \"status\": 404\n}\n\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"name\": {\"\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamName\": \"Test Team\",\n                         \"teamPermissions\": [\"admin\"]\n                    } \n                ]\n            } \n        ]\n   }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-Request-Origin
          in: header
          schema:
            type: string
          example: ' YOUR-REQUEST-ORIGIN-HERE'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer YOUR-SCIM-TOKEN-HERE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /scim/v2/Users:
    get:
      tags:
        - SCIM
      summary: Search Existing Dashboard User by Email
      description: "This endpoint allows you to look up an existing dashboard user account by specifying their email in the filter query parameter. Note that when the query parameter is URL encoded it will read like this:\n\n`/scim/v2/Users?filter=userName eq \"user@test.com\"`\n\nFor information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, DELETE, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nX-Request-Origin: YOUR-REQUEST-ORIGIN-HERE\nAuthorization: Bearer YOUR-SCIM-TOKEN-HERE\n{\n    \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:ListResponse\"],\n    \"totalResults\": 1,\n    \"Resources\": [\n        {\n            \"userName\": \"user@test.com\",\n            \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n            \"name\": {\n                \"givenName\": \"Test\",\n                \"familyName\": \"User\"\n            },\n            \"department\": \"finance\",\n            \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n            \"permissions\": {\n                \"companyPermissions\": [\"manage_company_settings\"],\n                \"appGroup\": [\n                    {\n                        \"appGroupId\": \"241adcd25789fabcded\",\n                        \"appGroupName\": \"Test App Group\",\n                        \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                        \"team\": [\n                            {\n                                \"teamId\": \"241adcd25789fabcded\",\n                                \"teamName\": \"Test Team\",                  \n                                \"teamPermissions\": [\"admin\"]\n                            }\n                        ]\n                    } \n                ]\n            }\n        }\n    ]\n}\n\n```"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-Request-Origin
          in: header
          schema:
            type: string
          example: ' YOUR-REQUEST-ORIGIN-HERE'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer YOUR-SCIM-TOKEN-HERE
        - name: filter
          in: query
          schema:
            type: string
          example: userName eq “user@test.com”
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - SCIM
      summary: Create New Dashboard User Account
      description: "This endpoint allows you to create a new dashboard user account by specifying email, given and family names, permissions (for setting permissions at the company, app group, and team level). For information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, and DELETE endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data type | Description |\n| --- | --- | --- | --- |\n| `schemas` | Required | Array of strings | Expected SCIM 2.0 schema name for user object. |\n| `userName` | Required | String | The user’s email address. |\n| `name` | Required | JSON object | This object contains the user's given name and family name. |\n| `department` | Required | String | Valid department string from the [department string documentation]({{site.baseurl}}/scim_api_appendix/#department-strings). |\n| `permissions` | Required | JSON object | Permissions object as described in the [permissions object documentation]({{site.baseurl}}/scim_api_appendix/#permissions-object). |\n\n\n## Response\n\n```json\n{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupId\": \"241adcd25789fabcded\",\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamId\": \"2519dafcdba238ae7\",\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"basic_access\",\"export_user_data\"]\n                    }\n                ]\n            } \n        ]\n    }\n}\n```\n\n### Error states\n\nIf a user with this email address already exists in Braze, the endpoint will respond with:\n\n```json\nHTTP/1.1 409 Conflict\nDate: Tue, 10 Sep 2019 02:22:30 GMT\nContent-Type: text/json;charset=UTF-8\n\n{\n  \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\n  \"detail\": \"User already exists in the database.\",\n  \"status\": 409\n}\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"basic_access\",\"export_user_data\"]\n                    }\n                ]\n            } \n        ]\n    }\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-Request-Origin
          in: header
          schema:
            type: string
          example: ' YOUR-REQUEST-ORIGIN-HERE'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer YOUR-SCIM-TOKEN-HERE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /sms/invalid_phone_numbers:
    get:
      tags:
        - SMS
      summary: Query Invalid Phone Numbers
      description: "Use this endpoint to pull a list of phone numbers that have been deemed “invalid” within a certain time frame.\n\n- If you provide a `start_date`, an `end_date`, and `phone_numbers`, we prioritize the given phone numbers and disregard the date range.\n- If your date range has more than the `limit` number of invalid phone numbers, you will need to make multiple API calls with increasing the `offset` each time until a call returns either fewer than `limit` or zero results.\n    \n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\nEntries are listed in descending order.\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"sms\": [\n    {\n      \"phone\": \"12345678900\",\n      \"invalid_detected_at\": \"2016-08-25 15:24:32 +0000\"\n    },\n    {\n      \"phone\": \"12345678901\",\n      \"invalid_detected_at\": \"2016-08-24 17:41:58 +0000\"\n    },\n    {\n      \"phone\": \"12345678902\",\n      \"invalid_detected_at\": \"2016-08-24 12:01:13 +0000\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: start_date
          in: query
          schema:
            type: string
          description: "(Optional*) String in YYYY-MM-DD format \nStart date of the range to retrieve invalid phone numbers, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.\n"
          example: "2018-09-01"
        - name: end_date
          in: query
          schema:
            type: string
          description: "(Optional*) String in YYYY-MM-DD format \nEnd date of the range to retrieve invalid phone numbers. This is treated as midnight in UTC time by the API.\n"
          example: "2018-09-01"
        - name: limit
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer
            Optional field to limit the number of results returned. Defaults to 100, maximum is 500.
          example: "100"
        - name: offset
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer
            Optional beginning point in the list to retrieve from.
          example: "1"
        - name: phone_numbers
          in: query
          schema:
            type: integer
          description: |
            (Optional*) Array of Strings in e.164 format
            If provided, we will return the phone number if it has been found to be invalid.
          example: "12345678901"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /sms/invalid_phone_numbers/remove:
    post:
      tags:
        - SMS
      summary: Remove Invalid Phone Numbers
      description: |-
        Use this endpoint to remove “invalid” phone numbers from Braze’s invalid list. This can be used to re-validate phone numbers after they have been marked as invalid.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `phone_number` | Required | Array of strings in e.164 format | An array of up to 50 phone numbers to modify. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"phone_numbers\": [\"12183095514\",\"14255551212\"]\n}"'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /subscription/status/get:
    get:
      tags:
        - Subscription Groups > SMS
      summary: List User's  Subscription Group Status - SMS
      description: |-
        Use this endpoint to get the subscription state of a user in a subscription group. These groups will be available on the **Subscription Group** page. The response from this endpoint will include the external ID and either subscribed, unsubscribed, or unknown for the specific subscription group requested in the API call. This can be used to update the subscription group state in subsequent API calls or to be displayed on a hosted web page.

        > \*Either `external_id` or `email` are required. When both are submitted, only the external_id is used for querying and the phone number is applied to that user.

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ## Response

        All successful responses will return `subscribed`, `unsubscribed`, or `unknown` depending on status and user history with the subscription group.

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "status": {
            "1": "Unsubscribed",
            "2": "Subscribed"
          },
          "message": "success"
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: subscription_group_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            The `id` of your subscription group.
          example: '{{subscription_group_id}}'
        - name: external_id
          in: query
          schema:
            type: string
          description: |
            (Required*) String

            The `external_id` of the user (must include at least one and at most 50 `external_ids`).

            When both an `external_id` and `phone` are submitted, only the external_id(s) provided will be applied to the result query.
          example: '{{external_identifier}}'
        - name: phone
          in: query
          schema:
            type: number
          description: |-
            (Required*) String in [E.164](https://en.wikipedia.org/wiki/E.164) format

            The phone number of the user (must include at least one phone number and at most 50 phone numbers).
          example: "+11112223333"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /subscription/user/status:
    get:
      tags:
        - Subscription Groups > SMS
      summary: List User's Subscription Group - SMS
      description: |-
        Use this endpoint to list and get the subscription groups of a certain user.

        > If there are multiple users (multiple external ids) who share the same email address, all users will be returned as a separate user (even if they have the same email address or subscription group).

        ## Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: external_id
          in: query
          schema:
            type: string
          description: |-
            (Required*) String

            The `external_id` of the user (must include at least one and at most 50 `external_ids`).
          example: '{{external_id}}'
        - name: limit
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            The limit on the maximum number of results returned. Default (and max) limit is 100.
          example: "100"
        - name: offset
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Integer

            	Number of templates to skip before returning the rest of the templates that fit the search criteria.
          example: "1"
        - name: phone
          in: query
          schema:
            type: number
          description: |-
            (Required*) String in [E.164](https://en.wikipedia.org/wiki/E.164) format

            The phone number of the user. Must include at least one phone number (with a max of 50).
          example: "+11112223333"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /subscription/status/set:
    post:
      tags:
        - Subscription Groups > SMS
      summary: Update User's Subscription Group Status - SMS
      description: "Use this endpoint to batch update the subscription state of up to 50 users on the Braze dashboard. You can access a subscription group’s `subscription_group_id` by navigating to the **Subscription Group** page.\n\n> \\*Only `external_id` or `phone` is accepted for SMS subscription groups.\n> \n> This property should not be used for updating a user’s profile information. Use the [/users/track](https://www.braze.com/docs/api/endpoints/user_data/post_user_track/) property instead.\n> \n> When creating new users via the [/users/track](https://www.braze.com/docs/api/endpoints/user_data/post_user_track/) endpoint, you should leave a delay of around 2 minutes before adding users to the relevant Subscription Group to allow Braze time to fully create the user profile.\n\n### Rate limit\n\nFor customers who onboarded with Braze on or after January 6, 2022, we apply a rate limit of 5,000 requests per minute shared across the `/subscription/status/set` and `/v2/subscription/status/set` endpoint as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `subscription_group_id` | Required | String | The `id` of your subscription group. |\n| `subscription_state` | Required | String | Available values are `unsubscribed` (not in subscription group) or `subscribed` (in subscription group). |\n| `external_id` | Required\\* | Array of strings | The `external_id` of the user or users, may include up to 50 `id`s. |\n| `phone` | Required\\* | String in [E.164](https://en.wikipedia.org/wiki/E.164) format | The phone number of the user, can be passed as an array of strings. Must include at least one phone number (with a max of 50). |\n\n### Example successful response\n\nResponse: (status 201)\n\n``` json\n{\n    \"message\": \"success\"\n}\n\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"subscription_group_id\": \"subscription_group_identifier\",\n  \"subscription_state\": \"unsubscribed\",\n  \"external_id\": \"external_identifier\",\n  \"phone\": [\"+12223334444\", \"+11112223333\"]\n}\n"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /v2/subscription/status/set:
    post:
      tags:
        - Subscription Groups > SMS
      summary: Update User's Subscription Group Status V2
      description: |-
        Use this endpoint to batch update the subscription state of up to 50 users on the Braze dashboard. You can access a subscription group’s `subscription_group_id` by navigating to the **Subscriptions Group** page.

        ## Rate limit

        For customers who onboarded with Braze on or after January 6, 2022, we apply a rate limit of 5,000 requests per minute shared across the `/subscription/status/set` and `/v2/subscription/status/set` endpoint as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).

        ## Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `subscription_group_id` | Required | String | The `id` of your subscription group. |
        | `subscription_state` | Required | String | Available values are `unsubscribed` (not in subscription group) or `subscribed` (in subscription group). |
        | `external_ids` | Required\* | Array of strings | The `external_id` of the user or users, may include up to 50 `id`s. |
        | `phones` | Required\* | String in [E.164](https://en.wikipedia.org/wiki/E.164) format | The phone numbers of the user, can be passed as an array of strings. Must include at least one phone number (with a max of 50). |

        ### Example successful response

        Response: (status 201)

        ``` json
        {
            "message": "success"
        }

        ```
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"\"subscription_groups\":[\n    {\n      \"subscription_group_id\":\"subscription_group_identifier\",\n      \"subscription_state\":\"subscribed\",\n      \"phones\":[\"+12223334444\",\"+15556667777\"]\n    }\n  ]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /content_blocks/list:
    get:
      tags:
        - Templates > Content Blocks
      summary: List Available Content Blocks
      description: |-
        Use this endpoint to list your existing [Content Blocks](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/) information.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR_REST_API_KEY
        {
          "count": "integer",
          "content_blocks": [
            {
              "content_block_id": "string",
              "name": "string",
              "content_type": "html or text",
              "liquid_tag": "string",
              "inclusion_count" : "integer",
              "created_at": "time-in-iso",
              "last_edited": "time-in-iso",
              "tags" : "array of strings"
            }
          ]
        }

        ```

        ### Possible errors

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | Modified after time is invalid | The provided date is not a valid or parsable date. Reformat this value as a string in ISO 8601 format (`yyyy-mm-ddThh:mm:ss.ffffff`). |
        | Modified before time is invalid | The provided date is not a valid or parsable date. Reformat this value as a string in ISO 8601 format (`yyyy-mm-ddThh:mm:ss.ffffff`). |
        | Modified after time must be earlier than or the same as modified before time. | Change the `modified_after` value to a time that is earlier than the `modified_before` time. |
        | Content Block number limit is invalid | The `limit` parameter must be an integer (positive number) greater than 0. |
        | Content Block number limit must be greater than 0 | Change the `limit` parameter to an integer greater than 0. |
        | Content Block number limit exceeds maximum of 1000 | Change the `limit` parameter to an integer less than 1000. |
        | Offset is invalid | The `offset` parameter must be an integer greater than 0. |
        | Offset must be greater than 0 | Change the `offset` parameter to an integer greater than 0. |
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: modified_after
          in: query
          schema:
            type: string
          description: |-
            (Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)

            Retrieve only content blocks updated at or after the given time.
          example: 2020-01-01T01:01:01.000000
        - name: modified_before
          in: query
          schema:
            type: string
          description: |-
            (Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)

            Retrieve only content blocks updated at or before the given time.
          example: 2020-02-01T01:01:01.000000
        - name: limit
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Positive Number

            Maximum number of content blocks to retrieve. Default to 100 if not provided, with a maximum acceptable value of 1000.
          example: "100"
        - name: offset
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Positive Number

            Number of content blocks to skip before returning rest of the templates that fit the search criteria.
          example: "1"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /content_blocks/info:
    get:
      tags:
        - Templates > Content Blocks
      summary: See Content Block Information
      description: |-
        Use this endpoint to call information for your existing [Content Blocks](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/).

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR_REST_API_KEY
        {
          "content_block_id": "string",
          "name": "string",
          "content": "string",
          "description": "string",
          "content_type": "html or text",
          "tags":  "array of strings",
          "created_at": "time-in-iso",
          "last_edited": "time-in-iso",
          "inclusion_count" : "integer",
          "message": "success"
        }

        ```

        ### Possible errors

        The following table lists possible returned errors and their associated troubleshooting steps.

        | Error | Troubleshooting |
        | --- | --- |
        | Content Block ID cannot be blank | Make sure that a Content Block is listed in your request and is encapsulated in quotes (`""`). |
        | Content Block ID is invalid for this App Group | This Content Block doesn't exist or is in a different company account or app group. |
        | Content Block has been deleted—content not available | This Content Block, though it may have existed earlier, has been deleted. |
        | Include Inclusion Data—error | This parameter only accepts boolean values (true or false). Make sure the value for `include_inclusion_data` is not encapsulated in quotes (`""`), which causes the value to be sent as a string instead. See request parameters for details. |
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: content_block_id
          in: query
          schema:
            type: string
          description: "(Required) String\n\nThe content block identifier. \n\nYou can find this by either listing content block information through an API call or going to **Developer Console** > **API Settings**, then scrolling to the bottom and searching for your content block API identifier."
          example: '{{content_block_id}}'
        - name: include_inclusion_data
          in: query
          schema:
            type: boolean
          description: |-
            (Optional) Boolean

            When set to `true`, the API returns back the Message Variation API identifier of campaigns and Canvases where this content block is included, to be used in subsequent calls. The results exclude archived or deleted Campaigns or Canvases.
          example: "false"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /content_blocks/create:
    post:
      tags:
        - Templates > Content Blocks
      summary: Create Content Block
      description: |-
        Use this endpoint to create a [Content Block](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/).

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `name` | Required | String | Name of the content block. Must be less than 100 characters. |
        | `description` | Optional | String | Description of the content block. Must be less than 250 characters. |
        | `content` | Required | String | HTML or text content within the Content Block. |
        | `state` | Optional | String | Choose `active` or `draft`. Defaults to `active` if not specified. |
        | `tags` | Optional | Array of strings | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |

        ### Response

        ``` json
        {
          "content_block_id": "newly-generated-block-id",
          "liquid_tag": "generated-block-tag-from-name",
          "created_at": "time-created-in-iso",
          "message": success
        }

        ```

        ### Possible errors

        The following table lists possible returned errors and their associated troubleshooting steps, if applicable.

        | Error | Troubleshooting |
        | --- | --- |
        | Content cannot be blank |  |
        | Content must be a string | Make sure your content is encapsulated in quotes (`""`). |
        | Content must be smaller than 50kb | The content in your Content Block must be less than 50kb total. |
        | Content contains malformed liquid | The Liquid provided is not valid or parsable. Try again with valid Liquid or reach out to support. |
        | Content Block cannot be referenced within itself |  |
        | Content Block description cannot be blank |  |
        | Content Block description must be a string | Make sure your Content Block description is encapsulated in quotes (`""`). |
        | Content Block description must be shorter than 250 characters |  |
        | Content Block name cannot be blank |  |
        | Content Block name must be shorter than 100 characters |  |
        | Content Block name can only contain alphanumeric characters | Content Block names can include any of the following characters: the letters (capitalized or lowercase) `A` through `Z`, the numbers `0` through `9`, dashes `-`, and underscores `_`. It cannot contain non-alphanumeric characters like emojis, `!`, `@`, `~`, `&`, and other "special" characters. |
        | Content Block with this name already exists | Try a different name. |
        | Content Block state must be either active or draft |  |
        | Tags must be an array | Tags must be formatted as an array of strings, for example `["marketing", "promotional", "transactional"]`. |
        | All tags must be strings | Make sure your tags are encapsulated in quotes (`""`). |
        | Some tags could not be found | To add a tag when creating a Content Block, the tag must already exist in Braze. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"name\": \"content_block\",\n  \"description\": \"This is my content block\",\n  \"content\": \"HTML content within block\",\n  \"state\": \"draft\",\n  \"tags\": [\"marketing\"]\n}\n"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /content_blocks/update:
    post:
      tags:
        - Templates > Content Blocks
      summary: Update Content Block
      description: |-
        Use this endpoint to update a [Content Block](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/).

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/)

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `content_block_id` | Required | String | Your content block's API identifier. |
        | `name` | Required | String | Name of the content block. Must be less than 100 characters. |
        | `description` | Optional | String | Description of the content block. Must be less than 250 characters. |
        | `content` | Required | String | HTML or text content within content blocks. |
        | `state` | Optional | String | Choose `active` or `draft`. Defaults to `active` if not specified. |
        | `tags` | Optional | Array of strings | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |

        ### Response

        ``` json
        {
          "content_block_id": "newly-generated-block-id",
          "liquid_tag": "generated-block-tag-from-content_block_name",
          "created_at": "time-created-in-iso",
          "message": "success"
        }

        ```

        ### Possible errors

        The following table lists possible returned errors and their associated troubleshooting steps, if applicable.

        | Error | Troubleshooting |
        | --- | --- |
        | Content cannot be blank |  |
        | Content must be a string | Make sure your content is encapsulated in quotes (`""`). |
        | Content must be smaller than 50kb | The content in your Content Block must be less than 50kb total. |
        | Content contains malformed liquid | The Liquid provided is not valid or parsable. Try again with valid Liquid or reach out to support. |
        | Content Block cannot be referenced within itself |  |
        | Content Block description cannot be blank |  |
        | Content Block description must be a string | Make sure your Content Block description is encapsulated in quotes (`""`). |
        | Content Block description must be shorter than 250 characters |  |
        | Content Block name cannot be blank |  |
        | Content Block name must be shorter than 100 characters |  |
        | Content Block name can only contain alphanumeric characters | Content Block names can include any of the following characters: the letters (capitalized or lowercase) `A` through `Z`, the numbers `0` through `9`, dashes `-`, and underscores `_`. It cannot contain non-alphanumeric characters like emojis, `!`, `@`, `~`, `&`, and other "special" characters. |
        | Content Block with this name already exists | Try a different name. |
        | Content Block name cannot be updated for active Content Blocks |  |
        | Content Block state must be either active or draft |  |
        | Active Content Block can not be updated to Draft. Create a new Content Block |  |
        | Tags must be an array | Tags must be formatted as an array of strings, for example `["marketing", "promotional", "transactional"]`. |
        | All tags must be strings | Make sure your tags are encapsulated in quotes (`""`). |
        | Some tags could not be found | To add a tag when creating a Content Block, the tag must already exist in Braze. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"content_block_id\" :\"content_block_id\", \n  \"name\": \"content_block\",\n  \"description\": \"This is my content block\",\n  \"content\": \"HTML or text content within block\",\n  \"state\": \"draft\",\n  \"tags\": [\"marketing\"]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /templates/email/list:
    get:
      tags:
        - Templates > Email Templates
      summary: List Available Email Templates
      description: |-
        Use this endpoint to get a list of available templates in your Braze account.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Response

        > **Important:** Templates built using the Drag & Drop Editor are not provided in this response.

        ``` json
        {
          "count": number of templates returned
          "templates": [template with the following properties]:
            "email_template_id": (string) your email template's API Identifier,
            "template_name": (string) the name of your email template,
            "created_at": (string, in ISO 8601),
            "updated_at": (string, in ISO 8601),
            "tags": (array of strings) tags appended to the template
        }

        ```
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: modified_after
          in: query
          schema:
            type: string
          description: |-
            (Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)

            Retrieve only templates updated at or after the given time.
          example: 2020-01-01T01:01:01.000000
        - name: modified_before
          in: query
          schema:
            type: string
          description: |-
            (Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)

            Retrieve only templates updated at or before the given time.
          example: 2020-02-01T01:01:01.000000
        - name: limit
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Positive Number

            Maximum number of templates to retrieve. Default to 100 if not provided, with a maximum acceptable value of 1000.
          example: "1"
        - name: offset
          in: query
          schema:
            type: integer
          description: |-
            (Optional) Positive Number

            Number of templates to skip before returning rest of the templates that fit the search criteria.
          example: "0"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /templates/email/info:
    get:
      tags:
        - Templates > Email Templates
      summary: See Email Template Information
      description: |-
        Use this endpoint to get information on your email templates.

        > **Important:** Templates built using the Drag & Drop Editor are not accepted.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Response

        ``` json
        Content-Type: application/json
        Authorization: Bearer YOUR-REST-API-KEY
        {
          "email_template_id": (string) your email template's API Identifier,
          "template_name": (string) the name of your email template,
          "description": (string) email template description,
          "subject": (string) the email template subject line,
          "preheader": (optional, string) the email preheader used to generate previews in some clients),
          "body": (optional, string) the email template body that may include HTML,
          "plaintext_body": (optional, string) a plaintext version of the email template body,
          "should_inline_css": (optional, boolean) whether there is inline CSS in the body of the template - defaults to the css inlining value for the App Group,
          "tags": (string) tag names,
          "created_at": (string, in ISO 8601),
          "updated_at": (string, in ISO 8601)
        }

        ```

        Images in this response will show in the `body` variable as HTML.
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
        - name: email_template_id
          in: query
          schema:
            type: string
          description: |-
            (Required) String

            See [email template's API identifier](https://www.braze.com/docs/api/identifier_types/).
          example: '{{email_template_id}}'
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /templates/email/create:
    post:
      tags:
        - Templates > Email Templates
      summary: Create Email Template
      description: |-
        Use this endpoint to create email templates on the Braze dashboard. These templates will be available on the **Templates & Media** page. The response from this endpoint will include a field for `email_template_id`, which can be used to update the template in subsequent API calls.

        Users’ email subscription status can be updated and retrieved via Braze using a RESTful API. You can use the API to set up bi-directional sync between Braze and other email systems or your own database. All API requests are made over HTTPS.

        ### Rate limit

        We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `template_name` | Required | String | Name of your email template. |
        | `subject` | Required | String | Email template subject line. |
        | `body` | Required | String | Email template body that may include HTML. |
        | `plaintext_body` | Optional | String | A plaintext version of the email template body. |
        | `preheader` | Optional | String | Email preheader used to generate previews in some clients. |
        | `tags` | Optional | String | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |
        | `should_inline_css` | Optional | Boolean | Enables or disables the `inline_css` feature per template. If not provided, Braze will use the default setting for the app group. One of `true` or `false` is expected. |

        ### Possible errors

        The following table lists possible returned errors and their associated troubleshooting steps, if applicable.

        | Error | Troubleshooting |
        | --- | --- |
        | Template name is required | Enter a template name. |
        | Tags must be an array | Tags must be formatted as an array of strings, for example `["marketing", "promotional", "transactional"]`. |
        | All tags must be strings | Make sure your tags are encapsulated in quotes (`""`). |
        | Some tags could not be found | To add a tag when creating an email template, the tag must already exist in Braze. |
        | Email must have valid Content Block names | The email contains Content Blocks that don't exist in this environment. |
        | Invalid value for `should_inline_css`. One of `true` or `false` was expected | This parameter only accepts boolean values (true or false). Make sure the value for `should_inline_css` is not encapsulated in quotes (`""`), which causes the value to be sent as a string instead. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"template_name\": \"email_template_name\",\n  \"subject\": \"Welcome to my email template!\",\n  \"body\": \"This is the text within my email body and https://www.braze.com/ here is a link to Braze.com.\",\n  \"plaintext_body\": \"This is the text within my email body and here is a link to https://www.braze.com/.\",\n  \"preheader\": \"My preheader is pretty cool.\",\n  \"tags\": [\"Tag1\", \"Tag2\"]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /templates/email/update:
    post:
      tags:
        - Templates > Email Templates
      summary: Update Email Template
      description: "Use this endpoint to update email templates on the Braze dashboard. You can access an email template’s email_template_id by navigating to it on the Templates & Media page. The Create email template endpoint will also return an email_template_id reference.\n\n> Use the endpoints below to update email templates on the Braze dashboard. You can access an email template's `email_template_id` by navigating to it on the Templates and Media page. The email template creation API endpoint will also return an `email_template_id` reference.  \n>   \n> All fields other than the `email_template_id` are optional, but you must specify at least one field to update.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email_template_id` | Required | String | Your [email template's API identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `template_name` | Optional | String | Name of your email template. |\n| `subject` | Optional | String | Email template subject line. |\n| `body` | Optional | String | Email template body that may include HTML. |\n| `plaintext_body` | Optional | String | A plaintext version of the email template body. |\n| `preheader` | Optional | String | Email preheader used to generate previews in some clients. |\n| `tags` | Optional | String | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |\n| `should_inline_css` | Optional | Boolean | Enables or disables the `inline_css` feature per template. If not provided, Braze will use the default setting for the AppGroup. One of `true` or `false` is expected. |\n\n### Possible errors\n\nThe following table lists possible returned errors and their associated troubleshooting steps, if applicable.\n\n| Error | Troubleshooting |\n| --- | --- |\n| Template name is required |  |\n| Tags must be an array | Tags must be formatted as an array of strings, for example `[\"marketing\", \"promotional\", \"transactional\"]`. |\n| All tags must be strings | Make sure your tags are encapsulated in quotes (`\"\"`). |\n| Some tags could not be found | To add a tag when creating an email template, the tag must already exist in Braze. |\n| Invalid value for `should_inline_css`. One of `true` or `false` was expected | This parameter only accepts boolean values (true or false). Make sure the value for `should_inline_css` is not encapsulated in quotes (`\"\"`), which causes the value to be sent as a string instead. |"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email_template_id\": \"email_template_id\",\n  \"template_name\": \"Weekly Newsletter\",\n  \"subject\": \"This Week''s Styles\",\n  \"body\": \"Check out this week''s digital lookbook to inspire your outfits. Take a look at https://www.braze.com/\",\n  \"plaintext_body\": \"This is the updated text within my email body and here is a link to https://www.braze.com/.\",\n  \"preheader\": \"We want you to have the best looks this Summer\",\n  \"tags\": [\"Tag1\", \"Tag2\"]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/external_ids/rename:
    post:
      tags:
        - User Data > External ID Migration
      summary: External ID Rename
      description: "> **Note:** For security purposes, this feature is disabled by default. To enable this feature, reach out to your customer success manager.\n\nUse this endpoint to rename your users’ external IDs. This endpoint sets a new (primary) `external_id` for the user and deprecates their existing `external_id`. This means that the user can be identified by either `external_id` until the deprecated one is removed. Having multiple external IDs allows for a migration period so that older versions of your apps that use the previous external ID naming schema don’t break.\n\n> **Note:** You can send up to 50 external IDs per request.\n\nYou will need to create a new [API key](https://www.braze.com/docs/api/api_key/) with permissions for this endpoint.\n\n## Rate limit\n\nWe apply a rate limit of 1,000 requests per minute to this endpoint, as documented in [API rate limits](http://braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `external_id_renames` | Required | Array of external ID rename objects | View request example and the following limitations for structure of external ID rename object |\n\n- The `current_external_id` must be the user’s primary ID, and cannot be a deprecated ID\n- The `new_external_id` must not already be in use as either a primary ID or a deprecated ID\n- The `current_external_id` and `new_external_id` cannot be the same\n    \n\n## Response\n\nThe response will confirm all successful renames, as well as unsuccessful renames with any associated errors. Error messages in the `rename_errors` field will reference the index of the object in the array of the original request.\n\n``` json\n{\n  \"message\" : (string) status message,\n  \"external_ids\" : (array of successful Rename Operations),\n  \"rename_errors\": (array of any )\n}\n\n```\n\nThe `message` field will return `success` for any valid request. More specific errors are captured in the `rename_errors` array. The `message` field returns an error in the case of:\n\n- Invalid API key\n- Empty `external_id_renames` array\n- `external_id_renames` array with more than 50 objects\n- Rate limit hit (>1,000 requests/minute)\n    \n\n## Frequently Asked Questions\n\n**Does this impact MAU?**  \nNo, since the number of users will stay the same, they’ll just have a new `external_id`.\n\n**Does user behavior change historically?**  \nNo, since the user is still the same user, and all their historical behavior is still connected to them.\n\n**Can it be run on dev/staging app groups?**  \nYes. In fact, we highly recommend running a test migration on a staging or development app group, and ensuring everything has gone smoothly before executing on production data.\n\n**Does this consume data points?**  \nThis feature does not cost data points.\n\n**What is the recommended deprecation period?**  \nWe have no hard limit on how long you can keep deprecated external IDs around, but we highly recommend removing them once there is no longer a need to reference users by the deprecated ID."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"external_id_renames\" :[\n    {\n      \"current_external_id\": \"existing_external_id\",\n      \"new_external_id\" : \"new_external_id\"\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/external_ids/remove:
    post:
      tags:
        - User Data > External ID Migration
      summary: External ID Remove
      description: |-
        > **Note:** For security purposes, this feature is disabled by default. To enable this feature, reach out to your customer success manager.

        Use this endpoint to remove your users’ old deprecated external IDs. This endpoint completely removes the deprecated ID and cannot be undone.

        > You can send up to 50 external IDs per request.

        You will need to create a new [API key](https://www.braze.com/docs/api/api_key/) with permissions for this endpoint.

        ## Rate limit

        We apply a rate limit of 1,000 requests per minute to this endpoint, as documented in [API rate limits](http://braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `external_ids` | Required | Array of strings | External identifiers for the users to remove |

        > **Important:** Only deprecated IDs can be removed; attempting to remove a primary external ID will result in an error.

        ## Response

        The response will confirm all successful removals, as well as unsuccessful removals with the associated errors. Error messages in the `removal_errors` field will reference the index in the array of the original request.

        ``` json
        {
          "message" : (string) status message,
          "removed_ids" : (array of successful Remove Operations),
          "removal_errors": (array of any )
        }

        ```

        The `message` field will return `success` for any valid request. More specific errors are captured in the `removal_errors` array. The `message` field returns an error in the case of:

        - Invalid API key
        - Empty `external_ids` array
        - `external_ids` array with more than 50 items
        - Rate limit hit (>1,000 requests/minute)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"external_ids\" :[\n    \"existing_deprecated_external_id_string\",\n    ...\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/alias/new:
    post:
      tags:
        - User Data
      summary: Create New User Aliases
      description: |-
        Use this endpoint to add new user aliases for existing identified users, or to create new unidentified users.

        > **Note:** You can add up to 50 user aliases per request.

        __Adding a user alias for an existing user__ requires an `external_id` to be included in the new user alias object. If the `external_id` is present in the object but there is no user with that `external_id`, the alias will not be added to any users. If an `external_id` is not present, a user will still be created, but will need to be identified later. You can do this using the "Identifying Users" and the `users/identify` endpoint<br><br>__Creating a new alias-only user__ requires the `external_id` to be omitted from the new user alias object. Once the user is created, use the `/users/track` endpoint to associate the alias-only user with attributes, events and purchases, and the `/users/identify` endpoint to identify the user with an `external_id`.

        ### Rate limit

        For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/delete` and `/users/identify` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameters

        | Parameter | Required | Data Type | Description |
        | --------- | ---------| --------- | ----------- |
        | `user_aliases` | Required | Array of new user alias objects | See [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/).<br><br> For more information on `alias_name` and `alias_label`, check out our [User Aliases](https://www.braze.com/docs/user_guide/data_and_analytics/user_data_collection/user_profile_lifecycle/#user-aliases) documentation.|
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"user_aliases\" :[\n    {\n      \"external_id\": \"external_identifier\",\n      \"alias_name\" : \"example_name\",\n      \"alias_label\" : \"example_label\"\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/delete:
    post:
      tags:
        - User Data
      summary: User Delete
      description: |-
        Use this endpoint to delete any user profile by specifying a known user identifier. Up to 50 `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request. Only one of `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request.

        > **Important:** Deleting user profiles cannot be undone. It will permanently remove users which may cause discrepancies in your data. Learn more about what happens when you [delete a user profile via API](https://braze.com/docs/help/help_articles/api/delete_user/) in our Help documentation.

        ### Rate limit

        For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/alias/new` and `/users/identify` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).

        ### Request parameter

        | Parameter | Required | Data Type | Description |
        | --- | --- | --- | --- |
        | `external_ids` | Optional | Array of strings | External identifiers for the users to delete. |
        | `user_aliases` | Optional | Array of user alias object | [User aliases](https://www.braze.com/docs/api/objects_filters/user_alias_object/) for the users to delete. |
        | `braze_ids` | Optional | Array of strings | Braze user identifiers for the users to delete. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"external_ids\": [\"external_identifier1\", \"external_identifier2\"],\n  \"braze_ids\": [\"braze_identifier1\", \"braze_identifier2\"],\n  \"user_aliases\": [\n    {\n      \"alias_name\": \"user_alias1\", \"alias_label\": \"alias_label1\"\n    },\n    {\n      \"alias_name\": \"user_alias2\", \"alias_label\": \"alias_label2\"\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/identify:
    post:
      tags:
        - User Data
      summary: Identify Users
      description: "Use this endpoint to identify an unidentified (alias-only) user.\n\nCalling `/users/identify` combines the alias-only profile with the identified profile and removes the alias-only profile. To prevent unexpected loss of data when identifying users, we highly recommend that you first refer to [data collection best practices](https://www.braze.com/docs/user_guide/data_and_analytics/user_data_collection/best_practices/#capturing-user-data-when-alias-only-user-info-is-already-present) to learn about capturing user data when alias-only user info is already present.\n\n> **Note:** You can add up to 50 user aliases per request.\n\nIdentifying a user requires an `external_id` to be included in the `aliases_to_identify` object. If there is no user with that `external_id`, the `external_id` will simply be added to the aliased user’s record, and the user will be considered identified.  \n  \nYou can associate multiple additional user aliases with a single `external_id`. When any of such associations are made, only the push tokens and message history associated with the user alias are retained; any attributes, events, or purchases will be “orphaned” and not available on the identified user. One workaround is to export the aliased user’s data before identification using the [/users/export/ids endpoint](https://www.braze.com/docs/api/endpoints/export/user_data/post_users_identifier/), then re-associate the attributes, events, and purchases with the identified user.\n\n> **Important:** Request fields and their values are case sensitive. Using different cases to reference an `external_id` will result in duplicate profiles. For example, “abc123” and “ABC123” are two different `external_ids`.\n\n### Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/delete` and `/users/alias/new` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `aliases_to_identify` | Required | Array of aliases to identify object | See [alias to identify object](https://www.braze.com/docs/api/objects_filters/aliases_to_identify/) and [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/). |\n\n### Aliases to Identify object specification\n\n``` json\n{\n  \"external_id\" : (required, string) see External User ID below,\n  // external_ids for users that do not exist will return a non-fatal error. \n  // See Server Responses for details.\n  \"user_alias\" : {\n    \"alias_name\" : (required, string),\n    \"alias_label\" : (required, string)\n  }\n}\n\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"aliases_to_identify\": [\n    {\n      \"external_id\": \"external_identifier\",\n      \"user_alias\": {\n        \"alias_name\" : \"example_alias\",\n        \"alias_label\" : \"example_label\"\n      }\n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/track:
    post:
      tags:
        - User Data
      summary: User Track
      description: "Use this endpoint to record custom events, purchases, and update user profile attributes.\n\n> **Note:** Braze processes the data passed via API at face value and customers should only pass deltas (changing data) to minimize unnecessary data point consumption. To read more, refer to [Data points](https://www.braze.com/docs/user_guide/onboarding_with_braze/data_points#data-points).\n\nCustomers using the API for server-to-server calls may need to whitelist `rest.iad-01.braze.com` if they’re behind a firewall.\n\n### Rate limit\n\nWe apply a base speed limit of 50,000 requests per minute to this endpoint for all customers. Each request to the `/users/track` endpoint can contain up to 75 events, 75 attribute updates, and 75 purchases. Each component (event, attribute, and purchase arrays), can update up to 75 users each for a max of 225 individual data points. Each update can also belong to the same user for a max of 225 updates to a single user in a request.\n\nSee our page on [API rate limits](https://www.braze.com/docs/api/api_limits/) for details, and reach out to your customer success manager if you need your limit increased.\n\n### Request parameters\n\n> **Note:** For each of the request components listed in the following table, one of `external_id`, `user_alias`, or `braze_id` is required.\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `attributes` | Optional | Array of attributes objects | See [user attributes object](https://www.braze.com/docs/api/objects_filters/user_attributes_object/) |\n| `events` | Optional | Array of event objects | See [events object](https://www.braze.com/docs/api/objects_filters/event_object/) |\n| `purchases` | Optional | Array of purchase objects | See [purchases object](https://www.braze.com/docs/api/objects_filters/purchase_object/) |\n\nKeep the following nuances in mind when using the `/users/track` endpoint:\n\n- When creating alias-only users through this endpoint, you must explicitly set the `_update_existing_only` flag to `false`.\n- Updating the subscription status with this endpoint will both update the user specified by their `external_id` (such as User1) and update the subscription status of any users with the same email as that user (User1).\n    \n\n## User track responses\n\nUpon using any of the aforementioned API requests you should receive one of the following three general responses:\n\n#### Successful message\n\nSuccessful messages will be met with the following response:\n\n``` json\n{\n  \"message\" : \"success\",\n  \"attributes_processed\" : (optional, integer), if attributes are included in the request, this will return an integer of the number of external_ids with attributes that were queued to be processed,\n  \"events_processed\" : (optional, integer), if events are included in the request, this will return an integer of the number of events that were queued to be processed,\n  \"purchases_processed\" : (optional, integer), if purchases are included in the request, this will return an integer of the number of purchases that were queued to be processed,\n}\n\n```\n\n#### Successful message with non-fatal errors\n\nIf your message is successful but has non-fatal errors such as one invalid event object out of a long list of events, then you will receive the following response:\n\n``` json\n{\n  \"message\" : \"success\",\n  \"errors\" : [\n    {\n      \n    }\n  ]\n}\n\n```\n\n#### Message with fatal errors\n\nIn the case of a success, any data that was not affected by an error in the `errors` array will still be processed. If your message has a fatal error you will receive the following response:\n\n``` json\n{\n  \"message\" : ,\n  \"errors\" : [\n    {\n      \n    }\n  ]\n}\n\n```\n\n#### Fatal error response codes\n\nThe following status codes and associated error messages will be returned if your request encounters a fatal error. Any of these error codes indicate that no data will be processed.\n\n| Error Code | Reason / Cause |\n| --- | --- |\n| `400 Bad Request` | Bad Syntax. |\n| `401 Unauthorized` | Unknown or missing REST API Key. |\n| `404 Not Found` | Unknown REST API Key (if provided). |\n| `429 Rate Limited` | Over rate limit. |\n| `5XX` | Internal server error, you should retry with exponential backoff. |\n\nIf you receive the error “provided external_id is blacklisted and disallowed”, your request may have included a “dummy user”. For more information, refer to [Spam blocking](https://www.braze.com/docs/user_guide/data_and_analytics/user_data_collection/user_archival/#spam-blocking).\n\n### Importing legacy user data\n\nYou may submit data through the Braze API for a user who has not yet used your mobile app in order to generate a user profile. If the user subsequently uses the application all information following their identification via the SDK will be merged with the existing user profile you created via the API call. Any user behavior that is recorded anonymously by the SDK prior to identification will be lost upon merging with the existing API-generated user profile.\n\nThe segmentation tool will include these users regardless of whether they have engaged with the app. If you want to exclude users uploaded via the User API who have not yet engaged with the app, simply add the filter: `Session Count > 0`.\n\n### Making bulk updates\n\nIf you have a use case where you need to make batch updates to the `users/track` endpoint, we recommend adding the bulk update header so that Braze can properly identify, observe, and route your request.\n\nRefer to the following sample request with the `X-Braze-Bulk` header:\n\n``` json\ncurl --location --request POST 'https://rest.iad-01.braze.com/users/track' \\\n--header 'Content-Type: application/json' \\\n--header 'X-Braze-Bulk: true' \\\n--header 'Authorization: Bearer YOUR-API-KEY-HERE' \\\n--data-raw '{ \"attributes\": [ ], \"events\": [ ], \"purchases\": [ ] }'\n\n```\n\n> **Warning:** When the `X-Braze-Bulk` header is present with any value, Braze will consider the request a bulk request. Set the value to `true`. Currently, setting the value to `false` does not disable the header—it will still be treated as if it were true.\n\n#### Use cases\n\nConsider the following use cases where you may use the bulk update header:\n\n- A daily job where multiple users’ custom attributes are updated via the `/users/track` endpoint.\n- An ad-hoc user data backfill script which updates user information via the `/users/track` endpoint."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"attributes\": [ \n    {\n      \"external_id\":\"user_identifier\",\n      \"string_attribute\": \"fruit\",\n      \"boolean_attribute_1\": true,\n      \"integer_attribute\": 25,\n      \"array_attribute\": [\"banana\", \"apple\"]\n    }\n  ],\n  \"events\": [\n    {\n      \"external_id\": \"user_identifier\",\n      \"app_id\" : \"app_identifier\",\n      \"name\": \"watched_trailer\",\n      \"time\": \"2013-07-16T19:20:30+1:00\"\n    }  \n  ],\n  \"purchases\": [\n     {\n      \"external_id\": \"user_identifier\",\n      \"app_id\": \"app_identifier\",\n      \"product_id\": \"product_name\",\n      \"currency\": \"USD\",\n      \"price\": 12.12,\n      \"quantity\": 6,\n      \"time\": \"2017-05-12T18:47:12Z\",\n      \"properties\": {\n         \"integer_property\": 3,\n         \"string_property\": \"Russell\",\n         \"date_property\": \"2014-02-02T00:00:00Z\"\n      } \n    }\n  ]\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api_key}}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
